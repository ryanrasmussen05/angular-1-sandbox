canvas {
  display: block; }

.banner-padding {
  padding-top: 75px !important;
  padding-bottom: 75px !important; }

.ui.menu {
  border-radius: 0; }

/**
 * Vertical alignment utilities
 * Depends on an appropriate `display` value.
 */
.u-alignBaseline {
  vertical-align: baseline !important; }

.u-alignBottom {
  vertical-align: bottom !important; }

.u-alignMiddle {
  vertical-align: middle !important; }

.u-alignTop {
  vertical-align: top !important; }

/**
  * @name Utils-Align
  * @description Utilities for vertically aligning elements.
  * @section utils.align.index
  *
  *
  * @markup
  *  <style>.test { font-size: 32px; padding: 15px 0; }
  *    .Box { height: 60px; width: 20px; display: inline-block; background: red;}
  *  </style>
  *  <div class="test">text <span class="u-alignBaseline Box"></span></div>
  *  <div class="test">text <span class="u-alignBottom Box"></span></div>
  *  <div class="test">text <span class="u-alignMiddle Box"></span></div>
  *  <div class="test">text <span class="u-alignTop Box"></span></div>
  */
/**
 * Specify the proportional offset after an element.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 4, 5, 6, 8, 10, 12 section
 */
.u-after1of12 {
  margin-right: 8.33333% !important; }

.u-after1of10 {
  margin-right: 10% !important; }

.u-after1of8 {
  margin-right: 12.5% !important; }

.u-after1of6,
.u-after2of12 {
  margin-right: 16.66667% !important; }

.u-after1of5,
.u-after2of10 {
  margin-right: 20% !important; }

.u-after1of4,
.u-after2of8,
.u-after3of12 {
  margin-right: 25% !important; }

.u-after3of10 {
  margin-right: 30% !important; }

.u-after1of3,
.u-after2of6,
.u-after4of12 {
  margin-right: 33.33333% !important; }

.u-after3of8 {
  margin-right: 37.5% !important; }

.u-after2of5,
.u-after4of10 {
  margin-right: 40% !important; }

.u-after5of12 {
  margin-right: 41.66667% !important; }

.u-after1of2,
.u-after2of4,
.u-after3of6,
.u-after4of8,
.u-after5of10,
.u-after6of12 {
  margin-right: 50% !important; }

.u-after7of12 {
  margin-right: 58.33333% !important; }

.u-after3of5,
.u-after6of10 {
  margin-right: 60% !important; }

.u-after5of8 {
  margin-right: 62.5% !important; }

.u-after2of3,
.u-after4of6,
.u-after8of12 {
  margin-right: 66.66667% !important; }

.u-after7of10 {
  margin-right: 70% !important; }

.u-after3of4,
.u-after6of8,
.u-after9of12 {
  margin-right: 75% !important; }

.u-after4of5,
.u-after8of10 {
  margin-right: 80% !important; }

.u-after5of6,
.u-after10of12 {
  margin-right: 83.33333% !important; }

.u-after7of8 {
  margin-right: 87.5% !important; }

.u-after9of10 {
  margin-right: 90% !important; }

.u-after11of12 {
  margin-right: 91.66667% !important; }

/**
 * Offset: breakpoint 1 (small)
 *
 * Specify the proportional offset after an element.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 4, 5, 6, 8, 10, 12 section
 */
@media (min-width: 320px) and (max-width: 640px) {
  .u-sm-afterNone {
    margin-left: 0 !important; }
  .u-sm-after1of12 {
    margin-right: 8.33333% !important; }
  .u-sm-after1of10 {
    margin-right: 10% !important; }
  .u-sm-after1of8 {
    margin-right: 12.5% !important; }
  .u-sm-after1of6,
  .u-sm-after2of12 {
    margin-right: 16.66667% !important; }
  .u-sm-after1of5,
  .u-sm-after2of10 {
    margin-right: 20% !important; }
  .u-sm-after1of4,
  .u-sm-after2of8,
  .u-sm-after3of12 {
    margin-right: 25% !important; }
  .u-sm-after3of10 {
    margin-right: 30% !important; }
  .u-sm-after1of3,
  .u-sm-after2of6,
  .u-sm-after4of12 {
    margin-right: 33.33333% !important; }
  .u-sm-after3of8 {
    margin-right: 37.5% !important; }
  .u-sm-after2of5,
  .u-sm-after4of10 {
    margin-right: 40% !important; }
  .u-sm-after5of12 {
    margin-right: 41.66667% !important; }
  .u-sm-after1of2,
  .u-sm-after2of4,
  .u-sm-after3of6,
  .u-sm-after4of8,
  .u-sm-after5of10,
  .u-sm-after6of12 {
    margin-right: 50% !important; }
  .u-sm-after7of12 {
    margin-right: 58.33333% !important; }
  .u-sm-after3of5,
  .u-sm-after6of10 {
    margin-right: 60% !important; }
  .u-sm-after5of8 {
    margin-right: 62.5% !important; }
  .u-sm-after2of3,
  .u-sm-after4of6,
  .u-sm-after8of12 {
    margin-right: 66.66667% !important; }
  .u-sm-after7of10 {
    margin-right: 70% !important; }
  .u-sm-after3of4,
  .u-sm-after6of8,
  .u-sm-after9of12 {
    margin-right: 75% !important; }
  .u-sm-after4of5,
  .u-sm-after8of10 {
    margin-right: 80% !important; }
  .u-sm-after5of6,
  .u-sm-after10of12 {
    margin-right: 83.33333% !important; }
  .u-sm-after7of8 {
    margin-right: 87.5% !important; }
  .u-sm-after9of10 {
    margin-right: 90% !important; }
  .u-sm-after11of12 {
    margin-right: 91.66667% !important; } }

/**
 * Offset: breakpoint 2 (medium)
 *
 * Specify the proportional offset after an element.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 4, 5, 6, 8, 10, 12 section
 */
@media (min-width: 640px) and (max-width: 960px) {
  .u-md-afterNone {
    margin-left: 0 !important; }
  .u-md-after1of12 {
    margin-right: 8.33333% !important; }
  .u-md-after1of10 {
    margin-right: 10% !important; }
  .u-md-after1of8 {
    margin-right: 12.5% !important; }
  .u-md-after1of6,
  .u-md-after2of12 {
    margin-right: 16.66667% !important; }
  .u-md-after1of5,
  .u-md-after2of10 {
    margin-right: 20% !important; }
  .u-md-after1of4,
  .u-md-after2of8,
  .u-md-after3of12 {
    margin-right: 25% !important; }
  .u-md-after3of10 {
    margin-right: 30% !important; }
  .u-md-after1of3,
  .u-md-after2of6,
  .u-md-after4of12 {
    margin-right: 33.33333% !important; }
  .u-md-after3of8 {
    margin-right: 37.5% !important; }
  .u-md-after2of5,
  .u-md-after4of10 {
    margin-right: 40% !important; }
  .u-md-after5of12 {
    margin-right: 41.66667% !important; }
  .u-md-after1of2,
  .u-md-after2of4,
  .u-md-after3of6,
  .u-md-after4of8,
  .u-md-after5of10,
  .u-md-after6of12 {
    margin-right: 50% !important; }
  .u-md-after7of12 {
    margin-right: 58.33333% !important; }
  .u-md-after3of5,
  .u-md-after6of10 {
    margin-right: 60% !important; }
  .u-md-after5of8 {
    margin-right: 62.5% !important; }
  .u-md-after2of3,
  .u-md-after4of6,
  .u-md-after8of12 {
    margin-right: 66.66667% !important; }
  .u-md-after7of10 {
    margin-right: 70% !important; }
  .u-md-after3of4,
  .u-md-after6of8,
  .u-md-after9of12 {
    margin-right: 75% !important; }
  .u-md-after4of5,
  .u-md-after8of10 {
    margin-right: 80% !important; }
  .u-md-after5of6,
  .u-md-after10of12 {
    margin-right: 83.33333% !important; }
  .u-md-after7of8 {
    margin-right: 87.5% !important; }
  .u-md-after9of10 {
    margin-right: 90% !important; }
  .u-md-after11of12 {
    margin-right: 91.66667% !important; } }

/**
 * Offset: breakpoint 3 (large)
 *
 * Specify the proportional offset after an element.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 4, 5, 6, 8, 10, 12 section
 */
/**
 * Specify the proportional offset before an object.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 section
 */
.u-before1of12 {
  margin-left: 8.33333% !important; }

.u-before1of10 {
  margin-left: 10% !important; }

.u-before1of8 {
  margin-left: 12.5% !important; }

.u-before1of6,
.u-before2of12 {
  margin-left: 16.66667% !important; }

.u-before1of5,
.u-before2of10 {
  margin-left: 20% !important; }

.u-before1of4,
.u-before2of8,
.u-before3of12 {
  margin-left: 25% !important; }

.u-before3of10 {
  margin-left: 30% !important; }

.u-before1of3,
.u-before2of6,
.u-before4of12 {
  margin-left: 33.33333% !important; }

.u-before3of8 {
  margin-left: 37.5% !important; }

.u-before2of5,
.u-before4of10 {
  margin-left: 40% !important; }

.u-before5of12 {
  margin-left: 41.66667% !important; }

.u-before1of2,
.u-before2of4,
.u-before3of6,
.u-before4of8,
.u-before5of10,
.u-before6of12 {
  margin-left: 50% !important; }

.u-before7of12 {
  margin-left: 58.33333% !important; }

.u-before3of5,
.u-before6of10 {
  margin-left: 60% !important; }

.u-before5of8 {
  margin-left: 62.5% !important; }

.u-before2of3,
.u-before4of6,
.u-before8of12 {
  margin-left: 66.66667% !important; }

.u-before7of10 {
  margin-left: 70% !important; }

.u-before3of4,
.u-before6of8,
.u-before9of12 {
  margin-left: 75% !important; }

.u-before4of5,
.u-before8of10 {
  margin-left: 80% !important; }

.u-before5of6,
.u-before10of12 {
  margin-left: 83.33333% !important; }

.u-before7of8 {
  margin-left: 87.5% !important; }

.u-before9of10 {
  margin-left: 90% !important; }

.u-before11of12 {
  margin-left: 91.66667% !important; }

/**
 * Offset: breakpoint 1 (small)
 *
 * Specify the proportional offset before an element.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 section
 */
@media (min-width: 320px) and (max-width: 640px) {
  .u-sm-beforeNone {
    margin-left: 0 !important; }
  .u-sm-before1of12 {
    margin-left: 8.33333% !important; }
  .u-sm-before1of10 {
    margin-left: 10% !important; }
  .u-sm-before1of8 {
    margin-left: 12.5% !important; }
  .u-sm-before1of6,
  .u-sm-before2of12 {
    margin-left: 16.66667% !important; }
  .u-sm-before1of5,
  .u-sm-before2of10 {
    margin-left: 20% !important; }
  .u-sm-before1of4,
  .u-sm-before2of8,
  .u-sm-before3of12 {
    margin-left: 25% !important; }
  .u-sm-before3of10 {
    margin-left: 30% !important; }
  .u-sm-before1of3,
  .u-sm-before2of6,
  .u-sm-before4of12 {
    margin-left: 33.33333% !important; }
  .u-sm-before3of8 {
    margin-left: 37.5% !important; }
  .u-sm-before2of5,
  .u-sm-before4of10 {
    margin-left: 40% !important; }
  .u-sm-before5of12 {
    margin-left: 41.66667% !important; }
  .u-sm-before1of2,
  .u-sm-before2of4,
  .u-sm-before3of6,
  .u-sm-before4of8,
  .u-sm-before5of10,
  .u-sm-before6of12 {
    margin-left: 50% !important; }
  .u-sm-before7of12 {
    margin-left: 58.33333% !important; }
  .u-sm-before3of5,
  .u-sm-before6of10 {
    margin-left: 60% !important; }
  .u-sm-before5of8 {
    margin-left: 62.5% !important; }
  .u-sm-before2of3,
  .u-sm-before4of6,
  .u-sm-before8of12 {
    margin-left: 66.66667% !important; }
  .u-sm-before7of10 {
    margin-left: 70% !important; }
  .u-sm-before3of4,
  .u-sm-before6of8,
  .u-sm-before9of12 {
    margin-left: 75% !important; }
  .u-sm-before4of5,
  .u-sm-before8of10 {
    margin-left: 80% !important; }
  .u-sm-before5of6,
  .u-sm-before10of12 {
    margin-left: 83.33333% !important; }
  .u-sm-before7of8 {
    margin-left: 87.5% !important; }
  .u-sm-before9of10 {
    margin-left: 90% !important; }
  .u-sm-before11of12 {
    margin-left: 91.66667% !important; } }

/**
 * Offset: breakpoint 2 (medium)
 *
 * Specify the proportional offset before an element.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 section
 */
@media (min-width: 640px) and (max-width: 960px) {
  .u-md-beforeNone {
    margin-left: 0 !important; }
  .u-md-before1of12 {
    margin-left: 8.33333% !important; }
  .u-md-before1of10 {
    margin-left: 10% !important; }
  .u-md-before1of8 {
    margin-left: 12.5% !important; }
  .u-md-before1of6,
  .u-md-before2of12 {
    margin-left: 16.66667% !important; }
  .u-md-before1of5,
  .u-md-before2of10 {
    margin-left: 20% !important; }
  .u-md-before1of4,
  .u-md-before2of8,
  .u-md-before3of12 {
    margin-left: 25% !important; }
  .u-md-before3of10 {
    margin-left: 30% !important; }
  .u-md-before1of3,
  .u-md-before2of6,
  .u-md-before4of12 {
    margin-left: 33.33333% !important; }
  .u-md-before3of8 {
    margin-left: 37.5% !important; }
  .u-md-before2of5,
  .u-md-before4of10 {
    margin-left: 40% !important; }
  .u-md-before5of12 {
    margin-left: 41.66667% !important; }
  .u-md-before1of2,
  .u-md-before2of4,
  .u-md-before3of6,
  .u-md-before4of8,
  .u-md-before5of10,
  .u-md-before6of12 {
    margin-left: 50% !important; }
  .u-md-before7of12 {
    margin-left: 58.33333% !important; }
  .u-md-before3of5,
  .u-md-before6of10 {
    margin-left: 60% !important; }
  .u-md-before5of8 {
    margin-left: 62.5% !important; }
  .u-md-before2of3,
  .u-md-before4of6,
  .u-md-before8of12 {
    margin-left: 66.66667% !important; }
  .u-md-before7of10 {
    margin-left: 70% !important; }
  .u-md-before3of4,
  .u-md-before6of8,
  .u-md-before9of12 {
    margin-left: 75% !important; }
  .u-md-before4of5,
  .u-md-before8of10 {
    margin-left: 80% !important; }
  .u-md-before5of6,
  .u-md-before10of12 {
    margin-left: 83.33333% !important; }
  .u-md-before7of8 {
    margin-left: 87.5% !important; }
  .u-md-before9of10 {
    margin-left: 90% !important; }
  .u-md-before11of12 {
    margin-left: 91.66667% !important; } }

/**
 * Offset: breakpoint 3 (large)
 *
 * Specify the proportional offset before an element.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 section
 */
/**
  * @name Offset Utilities
  * @description Utilities for offset.
  * @section utils.offset.index
  *
  *
  * @markup
  * <style>
  *   .test-Box {
  *     background: #649632;
  *     margin-bottom: 10px;
  *   }
  * </style>
  */
/**
  * @name Offset Utilities - After
  * @description Utilities for offsetting after an element.
  * @section utils.offset.after
  *
  *
  * @markup
  *  <div>
  *    <div class="u-after1of2 test-Box">1of2</div>
  *  </div>
  *  <div>
  *    <div class="u-after1of3 test-Box">1of3</div>
  *    <div class="u-after2of3 test-Box">2of3</div>
  *  </div>
  *  <div>
  *    <div class="u-after1of4 test-Box">1of4</div>
  *    <div class="u-after2of4 test-Box">2of4</div>
  *    <div class="u-after3of4 test-Box">3of4</div>
  *  </div>
  *  <div>
  *    <div class="u-after1of6 test-Box">1of6</div>
  *    <div class="u-after2of6 test-Box">2of6</div>
  *    <div class="u-after3of6 test-Box">3of6</div>
  *    <div class="u-after4of6 test-Box">4of6</div>
  *    <div class="u-after5of6 test-Box">5of6</div>
  *  </div>
  *  <div>
  *    <div class="u-after1of8 test-Box">1of8</div>
  *    <div class="u-after2of8 test-Box">2of8</div>
  *    <div class="u-after3of8 test-Box">3of8</div>
  *    <div class="u-after4of8 test-Box">4of8</div>
  *    <div class="u-after5of8 test-Box">5of8</div>
  *    <div class="u-after6of8 test-Box">6of8</div>
  *    <div class="u-after7of8 test-Box">7of8</div>
  *  </div>
  *  <div>
  *    <div class="u-after1of10 test-Box">1of10</div>
  *    <div class="u-after2of10 test-Box">2of10</div>
  *    <div class="u-after3of10 test-Box">3of10</div>
  *    <div class="u-after4of10 test-Box">4of10</div>
  *    <div class="u-after5of10 test-Box">5of10</div>
  *    <div class="u-after6of10 test-Box">6of10</div>
  *    <div class="u-after7of10 test-Box">7of10</div>
  *    <div class="u-after8of10 test-Box">8of10</div>
  *    <div class="u-after9of10 test-Box">9of10</div>
  *  </div>
  *  <div>
  *    <div class="u-after1of12 test-Box">1of12</div>
  *    <div class="u-after2of12 test-Box">2of12</div>
  *    <div class="u-after3of12 test-Box">3of12</div>
  *    <div class="u-after4of12 test-Box">4of12</div>
  *    <div class="u-after5of12 test-Box">5of12</div>
  *    <div class="u-after6of12 test-Box">6of12</div>
  *    <div class="u-after7of12 test-Box">7of12</div>
  *    <div class="u-after8of12 test-Box">8of12</div>
  *    <div class="u-after9of12 test-Box">9of12</div>
  *    <div class="u-after10of12 test-Box">10of12</div>
  *    <div class="u-after11of12 test-Box">11of12</div>
  *  </div>
  */
/**
  * @name Offset Utilities - Before
  * @description Utilities for offsetting before an element.
  * @section utils.offset.before
  *
  *
  * @markup
  *  <div>
  *    <div class="u-before1of2 test-Box">1of2</div>
  *  </div>
  *  <div>
  *    <div class="u-before1of3 test-Box">1of3</div>
  *    <div class="u-before2of3 test-Box">2of3</div>
  *  </div>
  *  <div>
  *    <div class="u-before1of4 test-Box">1of4</div>
  *    <div class="u-before2of4 test-Box">2of4</div>
  *    <div class="u-before3of4 test-Box">3of4</div>
  *  </div>
  *  <div>
  *    <div class="u-before1of6 test-Box">1of6</div>
  *    <div class="u-before2of6 test-Box">2of6</div>
  *    <div class="u-before3of6 test-Box">3of6</div>
  *    <div class="u-before4of6 test-Box">4of6</div>
  *    <div class="u-before5of6 test-Box">5of6</div>
  *  </div>
  *  <div>
  *    <div class="u-before1of8 test-Box">1of8</div>
  *    <div class="u-before2of8 test-Box">2of8</div>
  *    <div class="u-before3of8 test-Box">3of8</div>
  *    <div class="u-before4of8 test-Box">4of8</div>
  *    <div class="u-before5of8 test-Box">5of8</div>
  *    <div class="u-before6of8 test-Box">6of8</div>
  *    <div class="u-before7of8 test-Box">7of8</div>
  *  </div>
  *  <div>
  *    <div class="u-before1of10 test-Box">1of10</div>
  *    <div class="u-before2of10 test-Box">2of10</div>
  *    <div class="u-before3of10 test-Box">3of10</div>
  *    <div class="u-before4of10 test-Box">4of10</div>
  *    <div class="u-before5of10 test-Box">5of10</div>
  *    <div class="u-before6of10 test-Box">6of10</div>
  *    <div class="u-before7of10 test-Box">7of10</div>
  *    <div class="u-before8of10 test-Box">8of10</div>
  *    <div class="u-before9of10 test-Box">9of10</div>
  *  </div>
  *  <div>
  *    <div class="u-before1of12 test-Box">1of12</div>
  *    <div class="u-before2of12 test-Box">2of12</div>
  *    <div class="u-before3of12 test-Box">3of12</div>
  *    <div class="u-before4of12 test-Box">4of12</div>
  *    <div class="u-before5of12 test-Box">5of12</div>
  *    <div class="u-before6of12 test-Box">6of12</div>
  *    <div class="u-before7of12 test-Box">7of12</div>
  *    <div class="u-before8of12 test-Box">8of12</div>
  *    <div class="u-before9of12 test-Box">9of12</div>
  *    <div class="u-before10of12 test-Box">10of12</div>
  *    <div class="u-before11of12 test-Box">11of12</div>
  *  </div>
  */
/**
  * @name Offset Utilities - Offset with Media Query breakpoints.
  * @description Utilities can be limited to specific Media Query breakpoints. Often used in combination for different offsets at breakpoints.
  * @section utils.offset.mediaQuery
  *
  *
  * @markup
  *  <div>
  *    <div class="u-sm-before1of2 test-Box">1of2 within smallest breakpoint</div>
  *    <div class="u-md-before1of3 test-Box">1of3 within medium breakpoint</div>
  *    <div class="u-lg-before1of4 test-Box">1of4 within large breakpoint</div>
  *    <div class="u-sm-after1of2 test-Box">1of2 within smallest breakpoint</div>
  *    <div class="u-md-after1of3 test-Box">1of3 within medium breakpoint</div>
  *    <div class="u-lg-after1of4 test-Box">1of4 within large breakpoint</div>
  *  </div>
  */
/**
 * Display-type utilities
 */
.u-block {
  display: block !important; }

.u-hidden {
  display: none !important; }

/**
 * Completely remove from the flow but leave available to screen readers.
 */
.u-hiddenVisually {
  position: absolute !important;
  overflow: hidden !important;
  clip: rect(1px, 1px, 1px, 1px) !important;
  padding: 0 !important;
  width: 1px !important;
  height: 1px !important;
  border: 0 !important; }

.u-inline {
  display: inline !important; }

/**
 * 1. Fix for Firefox bug: an image styled `max-width:100%` within an
 * inline-block will display at its default size, and not limit its width to
 * 100% of an ancestral container.
 */
.u-inlineBlock {
  display: inline-block !important;
  max-width: 100%;
  /* 1 */ }

.u-table {
  display: table !important; }

.u-tableCell {
  display: table-cell !important; }

.u-tableRow {
  display: table-row !important; }

/**
  * @name Display Utilities
  * @description Utilities for display.
  * @section utils.display.index
  */
/**
  * @name Display Utilities - Block
  * @description Renders with block display.
  * @section utils.display.block
  *
  *
  * @markup
  * <span class="u-block">
  *   This <code>span</code> should be <code>block</code>
  * </span>
  */
/**
  * @name Display Utilities - Hidden
  * @description Render as hidden.
  * @section utils.display.hidden
  *
  *
  * @markup
  * <span class="u-hidden">
  *     This <code>span</code> should be hidden
  * </span>
  */
/**
  * @name Display Utilities - Visually Hidden
  * @description Renders visually hidden (but available to screen readers).
  * @section utils.display.hiddenVisually
  *
  *
  * @markup
  * <span class="u-hiddenVisually">
  *     This <code>span</code> should be read by screenreaders
  * </span>
  */
/**
  * @name Display Utilities - Inline block
  * @description Renders inline block. Does not expand beyond its parent with wide children.
  * @section utils.display.inlineBlock
  *
  *
  * @markup
  * <span class="u-inlineBlock dev-Inner">
  *   This <code>span</code> should be <code>inline-block</code>
  * </span>
  * <div style="width:200px">
  *   <div class="u-inlineBlock dev-Inner">
  *     <img src="http://lorempixel.com/300/300/sports/1" alt="" style="margin:10px 0; max-width:100%;">
  *   </div>
  * </div>
  */
/**
  * @name Display Utilities - Table
  * @description Renders as a table.
  * @section utils.display.table
  *
  *
  * @markup
  * <div class="u-table Test-area">
  *   <div class="u-tableRow">
  *     <div class="u-tableCell">
  *       This <code>div</code> should be <code>table-cell</code> within <code>table</code>
  *     </div>
  *   </div>
  *   <div class="u-tableRow">
  *     <div class="u-tableCell">
  *      A table-cell within table
  *     </div>
  *     <div class="u-tableCell">
  *       A table-cell within table
  *     </div>
  *   </div>
  * </div>
  */
/**
    * @name Display Utilities - Overflow
    * @description Controls overflow style of an element
    * @section utils.display.overflow
    *
    * @markupUrl url(node_modules/hammock-utils-display/guide/overflow.html)
    */
.u-overflowScroll {
  overflow: auto; }

.u-overflowScroll-x {
  overflow-x: auto; }

.u-overflowScroll-y {
  overflow-y: auto; }

.u-overflowHidden {
  overflow: hidden; }

.u-overflowHidden-x {
  overflow-x: hidden; }

.u-overflowHidden-y {
  overflow-y: hidden; }

.u-overflowVisible {
  overflow: visible; }

/**
* @name Utils FontSize
* @description Utilities for adjusting fontsize by trumps
* @section utils.fontsize.index
*
*/
/**
* @name Utils Font Size - basic ordinal sizing trumps
* @description Used to force font size. ordinal classes.
* @section utils.fontsize.Basic
*
* @markupUrl url(node_modules/hammock-utils-fontsize/guide/default.html)
*/
/*  meant to follow h1 to h6 sizing but are abstracted to be flexible */
.u-alpha {
  font-size: 32px !important;
  font-size: 2rem !important; }

.u-beta {
  font-size: 24px !important;
  font-size: 1.5rem !important; }

.u-gamma {
  font-size: 20px !important;
  font-size: 1.25rem !important; }

.u-delta {
  font-size: 16px !important;
  font-size: 1rem !important; }

.u-epsilon {
  font-size: 14px !important;
  font-size: .875rem !important; }

.u-zeta {
  font-size: 12px !important;
  font-size: .75rem !important; }

/**
* @name Utils Font Size - Large trumps
* @description Used to force larger font size.
* @section utils.fontsize.Larger
* 
* @markupUrl url(node_modules/hammock-utils-fontsize/guide/large.html)

*/
/* based on manipulation of --u-alpha size */
.u-giga {
  font-size: 80px !important;
  font-size: 5rem !important; }

.u-mega {
  font-size: 64px !important;
  font-size: 4rem !important; }

.u-kilo {
  font-size: 48px !important;
  font-size: 3rem !important; }

/**
* @name Utils Font Size - Small trumps
* @description Used to force smaller font size
* @section utils.fontsize.Smaller
*
* @markupUrl url(node_modules/hammock-utils-fontsize/guide/small.html)

*/
/* based on manipulation of --u-zeta size */
.u-milli {
  font-size: 10px !important;
  font-size: 0.675rem !important; }

.u-micro {
  font-size: 9px !important;
  font-size: 0.6rem !important; }

/**
 * Sizing utilities
 */
/* Intrinsic widths
   ========================================================================== */
/**
 * Make an element shrink wrap its content.
 */
.u-sizeFit,
.u-sizeFitAlt {
  display: block !important;
  float: left !important;
  width: auto !important; }

.u-sizeFitAlt {
  float: right !important; }

/**
 * Make an element fill the remaining space.
 * N.B. This will hide overflow.
 */
.u-sizeFill {
  display: block !important;
  overflow: hidden !important;
  width: auto !important; }

/**
 * An alternative method to make an element fill the remaining space.
 * N.B. Do not use if child elements might be wider than the remaining space.
 * In Chrome, Safari, and Firefox it results in undesired layout.
 */
.u-sizeFillAlt {
  display: table-cell !important;
  max-width: 100% !important;
  width: 10000px !important; }

/**
 * Make an element the width of its parent.
 */
.u-sizeFull {
  display: block !important;
  box-sizing: border-box !important;
  width: 100% !important; }

/* Proportional widths
   ========================================================================== */
/**
 * Specify the proportional width of an object.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
 */
.u-size1of12 {
  width: 8.33333% !important; }

.u-size1of10 {
  width: 10% !important; }

.u-size1of8 {
  width: 12.5% !important; }

.u-size1of6,
.u-size2of12 {
  width: 16.66667% !important; }

.u-size1of5,
.u-size2of10 {
  width: 20% !important; }

.u-size1of4,
.u-size2of8,
.u-size3of12 {
  width: 25% !important; }

.u-size3of10 {
  width: 30% !important; }

.u-size1of3,
.u-size2of6,
.u-size4of12 {
  width: 33.33333% !important; }

.u-size3of8 {
  width: 37.5% !important; }

.u-size2of5,
.u-size4of10 {
  width: 40% !important; }

.u-size5of12 {
  width: 41.66667% !important; }

.u-size1of2,
.u-size2of4,
.u-size3of6,
.u-size4of8,
.u-size5of10,
.u-size6of12 {
  width: 50% !important; }

.u-size7of12 {
  width: 58.33333% !important; }

.u-size3of5,
.u-size6of10 {
  width: 60% !important; }

.u-size5of8 {
  width: 62.5% !important; }

.u-size2of3,
.u-size4of6,
.u-size8of12 {
  width: 66.66667% !important; }

.u-size7of10 {
  width: 70% !important; }

.u-size3of4,
.u-size6of8,
.u-size9of12 {
  width: 75% !important; }

.u-size4of5,
.u-size8of10 {
  width: 80% !important; }

.u-size5of6,
.u-size10of12 {
  width: 83.33333% !important; }

.u-size7of8 {
  width: 87.5% !important; }

.u-size9of10 {
  width: 90% !important; }

.u-size11of12 {
  width: 91.66667% !important; }

/**
 * Size: breakpoint 1 (small)
 */
@media (min-width: 320px) and (max-width: 640px) {
  /**
   * Make an element shrink wrap its content.
   */
  .u-sm-sizeFit,
  .u-sm-sizeFitAlt {
    display: block !important;
    float: left !important;
    width: auto !important; }
  .u-sm-sizeFitAlt {
    float: right !important; }
  /**
   * Make an element fill the remaining space.
   * N.B. This will hide overflow.
   */
  .u-sm-sizeFill {
    display: block !important;
    overflow: hidden !important;
    width: auto !important; }
  /**
   * An alternative method to make an element fill the remaining space.
   * N.B. Do not use if child elements might be wider than the remaining space.
   * In Chrome, Safari, and Firefox it results in undesired layout.
   */
  .u-sm-sizeFillAlt {
    display: table-cell !important;
    max-width: 100% !important;
    width: 10000px !important; }
  /**
   * Make an element the width of its parent.
   */
  .u-sm-sizeFull {
    display: block !important;
    box-sizing: border-box !important;
    width: 100% !important; }
  /* Proportional widths: breakpoint 1 (small)
     ========================================================================== */
  /**
   * Specify the proportional width of an object.
   * Intentional redundancy build into each set of unit classes.
   * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
   */
  .u-sm-size1of12 {
    width: 8.33333% !important; }
  .u-sm-size1of10 {
    width: 10% !important; }
  .u-sm-size1of8 {
    width: 12.5% !important; }
  .u-sm-size1of6,
  .u-sm-size2of12 {
    width: 16.66667% !important; }
  .u-sm-size1of5,
  .u-sm-size2of10 {
    width: 20% !important; }
  .u-sm-size1of4,
  .u-sm-size2of8,
  .u-sm-size3of12 {
    width: 25% !important; }
  .u-sm-size3of10 {
    width: 30% !important; }
  .u-sm-size1of3,
  .u-sm-size2of6,
  .u-sm-size4of12 {
    width: 33.33333% !important; }
  .u-sm-size3of8 {
    width: 37.5% !important; }
  .u-sm-size2of5,
  .u-sm-size4of10 {
    width: 40% !important; }
  .u-sm-size5of12 {
    width: 41.66667% !important; }
  .u-sm-size1of2,
  .u-sm-size2of4,
  .u-sm-size3of6,
  .u-sm-size4of8,
  .u-sm-size5of10,
  .u-sm-size6of12 {
    width: 50% !important; }
  .u-sm-size7of12 {
    width: 58.33333% !important; }
  .u-sm-size3of5,
  .u-sm-size6of10 {
    width: 60% !important; }
  .u-sm-size5of8 {
    width: 62.5% !important; }
  .u-sm-size2of3,
  .u-sm-size4of6,
  .u-sm-size8of12 {
    width: 66.66667% !important; }
  .u-sm-size7of10 {
    width: 70% !important; }
  .u-sm-size3of4,
  .u-sm-size6of8,
  .u-sm-size9of12 {
    width: 75% !important; }
  .u-sm-size4of5,
  .u-sm-size8of10 {
    width: 80% !important; }
  .u-sm-size5of6,
  .u-sm-size10of12 {
    width: 83.33333% !important; }
  .u-sm-size7of8 {
    width: 87.5% !important; }
  .u-sm-size9of10 {
    width: 90% !important; }
  .u-sm-size11of12 {
    width: 91.66667% !important; } }

/**
 * Size: breakpoint 2 (medium)
 */
@media (min-width: 640px) and (max-width: 960px) {
  /**
   * Make an element shrink wrap its content.
   */
  .u-md-sizeFit,
  .u-md-sizeFitAlt {
    display: block !important;
    float: left !important;
    width: auto !important; }
  .u-md-sizeFitAlt {
    float: right !important; }
  /**
   * Make an element fill the remaining space.
   * N.B. This will hide overflow.
   */
  .u-md-sizeFill {
    display: block !important;
    overflow: hidden !important;
    width: auto !important; }
  /**
   * An alternative method to make an element fill the remaining space.
   * N.B. Do not use if child elements might be wider than the remaining space.
   * In Chrome, Safari, and Firefox it results in undesired layout.
   */
  .u-md-sizeFillAlt {
    display: table-cell !important;
    max-width: 100% !important;
    width: 10000px !important; }
  /**
   * Make an element the width of its parent.
   */
  .u-md-sizeFull {
    display: block !important;
    box-sizing: border-box !important;
    width: 100% !important; }
  /* Proportional widths: breakpoint 2 (medium)
     ========================================================================== */
  /**
   * Specify the proportional width of an object.
   * Intentional redundancy build into each set of unit classes.
   * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
   */
  .u-md-size1of12 {
    width: 8.33333% !important; }
  .u-md-size1of10 {
    width: 10% !important; }
  .u-md-size1of8 {
    width: 12.5% !important; }
  .u-md-size1of6,
  .u-md-size2of12 {
    width: 16.66667% !important; }
  .u-md-size1of5,
  .u-md-size2of10 {
    width: 20% !important; }
  .u-md-size1of4,
  .u-md-size2of8,
  .u-md-size3of12 {
    width: 25% !important; }
  .u-md-size3of10 {
    width: 30% !important; }
  .u-md-size1of3,
  .u-md-size2of6,
  .u-md-size4of12 {
    width: 33.33333% !important; }
  .u-md-size3of8 {
    width: 37.5% !important; }
  .u-md-size2of5,
  .u-md-size4of10 {
    width: 40% !important; }
  .u-md-size5of12 {
    width: 41.66667% !important; }
  .u-md-size1of2,
  .u-md-size2of4,
  .u-md-size3of6,
  .u-md-size4of8,
  .u-md-size5of10,
  .u-md-size6of12 {
    width: 50% !important; }
  .u-md-size7of12 {
    width: 58.33333% !important; }
  .u-md-size3of5,
  .u-md-size6of10 {
    width: 60% !important; }
  .u-md-size5of8 {
    width: 62.5% !important; }
  .u-md-size2of3,
  .u-md-size4of6,
  .u-md-size8of12 {
    width: 66.66667% !important; }
  .u-md-size7of10 {
    width: 70% !important; }
  .u-md-size3of4,
  .u-md-size6of8,
  .u-md-size9of12 {
    width: 75% !important; }
  .u-md-size4of5,
  .u-md-size8of10 {
    width: 80% !important; }
  .u-md-size5of6,
  .u-md-size10of12 {
    width: 83.33333% !important; }
  .u-md-size7of8 {
    width: 87.5% !important; }
  .u-md-size9of10 {
    width: 90% !important; }
  .u-md-size11of12 {
    width: 91.66667% !important; } }

/**
 * Size: breakpoint 3 (large)
 */
/**
  * @name Size Utilities
  * @description Utilities for size.
  * @section utils.size.index
  *
  *
  * @markup
  * <style>
  *   .u-cf:after {
  *     clear: both;
  *     content:"";
  *     display: table;
  *   }
  *   .Test-highlight {
  *     background: #ff0;
  *     margin: 0 0 10px;
  *   }
  *   .Test-box {
  *     background: #649632;
  *     height: 25px;
  *     margin-bottom: 10px;
  *     color: #fff;
  *   }
  *   .Test-box--square {
  *     height: 50px;
  *     width: 50px;
  *   }
  * </style>
  */
/**
  * @name Explicit Sizes
  * @description Utilities for sizing and element to an explicit size.
  * @section utils.size.sizeXofY
  *
  *
  * @markup
  *  <div>
  *    <div class="u-size1of2 Test-box">1of2</div>
  *  </div>
  *  <div>
  *    <div class="u-size1of3 Test-box">1of3</div>
  *    <div class="u-size2of3 Test-box">2of3</div>
  *  </div>
  *  <div>
  *    <div class="u-size1of4 Test-box">1of4</div>
  *    <div class="u-size2of4 Test-box">2of4</div>
  *    <div class="u-size3of4 Test-box">3of4</div>
  *  </div>
  *  <div>
  *    <div class="u-size1of6 Test-box">1of6</div>
  *    <div class="u-size2of6 Test-box">2of6</div>
  *    <div class="u-size3of6 Test-box">3of6</div>
  *    <div class="u-size4of6 Test-box">4of6</div>
  *    <div class="u-size5of6 Test-box">5of6</div>
  *  </div>
  *  <div>
  *    <div class="u-size1of8 Test-box">1of8</div>
  *    <div class="u-size2of8 Test-box">2of8</div>
  *    <div class="u-size3of8 Test-box">3of8</div>
  *    <div class="u-size4of8 Test-box">4of8</div>
  *    <div class="u-size5of8 Test-box">5of8</div>
  *    <div class="u-size6of8 Test-box">6of8</div>
  *    <div class="u-size7of8 Test-box">7of8</div>
  *  </div>
  *  <div>
  *    <div class="u-size1of10 Test-box">1of10</div>
  *    <div class="u-size2of10 Test-box">2of10</div>
  *    <div class="u-size3of10 Test-box">3of10</div>
  *    <div class="u-size4of10 Test-box">4of10</div>
  *    <div class="u-size5of10 Test-box">5of10</div>
  *    <div class="u-size6of10 Test-box">6of10</div>
  *    <div class="u-size7of10 Test-box">7of10</div>
  *    <div class="u-size8of10 Test-box">8of10</div>
  *    <div class="u-size9of10 Test-box">9of10</div>
  *  </div>
  *  <div>
  *    <div class="u-size1of12 Test-box">1of12</div>
  *    <div class="u-size2of12 Test-box">2of12</div>
  *    <div class="u-size3of12 Test-box">3of12</div>
  *    <div class="u-size4of12 Test-box">4of12</div>
  *    <div class="u-size5of12 Test-box">5of12</div>
  *    <div class="u-size6of12 Test-box">6of12</div>
  *    <div class="u-size7of12 Test-box">7of12</div>
  *    <div class="u-size8of12 Test-box">8of12</div>
  *    <div class="u-size9of12 Test-box">9of12</div>
  *    <div class="u-size10of12 Test-box">10of12</div>
  *    <div class="u-size11of12 Test-box">11of12</div>
  *  </div>
  */
/**
  * @name Size with Media Query breakpoints.
  * @description Size utilities can be limited to specific Media Query breakpoints. Often used in combination for different sizes at breakpoints.
  * @section utils.size.mediaQuery
  *
  *
  * @markup
  *  <div>
  *    <div class="u-sm-size1of2 Test-box">1of2 within smallest breakpoint</div>
  *    <div class="u-md-size1of3 Test-box">1of3 within medium breakpoint</div>
  *    <div class="u-lg-size1of4 Test-box">1of4 within large breakpoint</div>
  *  </div>
  */
/**
  * @name Size Fit / Size Fill
  * @description Shrink-wraps (on left) / fills remaining space.
  * @section utils.size.sizeFitsizeFill
  *
  *
  * @markup
  *  <div class="u-cf">
  *    <div class="u-sizeFit">
  *      <div class="Test-box Test-box--square"></div>
  *    </div>
  *    <div class="u-sizeFill Test-highlight">
  *      content
  *    </div>
  *  </div>
  */
/**
  * @name Size Fit / Size Fill (Alternate)
  * @description Shrink-wraps (on left) / fills remaining space.
  * @section utils.size.sizeFitsizeFillAlt
  *
  *
  * @markup
  *  <div class="u-cf">
  *    <div class="u-sizeFit">
  *      <div class="Test-box Test-box--square"></div>
  *    </div>
  *    <div class="u-sizeFillAlt Test-highlight">
  *      content
  *    </div>
  *  </div>
  */
/**
  * @name Size Fit (Alternate) / Size Fill
  * @description Shrink-wraps (on right) / fills remaining space.
  * @section utils.size.sizeFitAltsizeFill
  *
  *
  * @markup
  *  <div class="u-cf">
  *    <div class="u-sizeFitAlt">
  *      <div class="Test-box Test-box--square"></div>
  *    </div>
  *    <div class="u-sizeFill Test-highlight">
  *      content
  *    </div>
  *  </div>
  */
/**
  * @name Size Full
  * @description Fluidly fits to its container/parent in height and width
  * @section utils.size.sizeFull
  *
  *
  * @markup
  *  <div class="u-cf">
  *    <div class="u-sizeFull Test-highlight">
  *      content
  *    </div>
  *  </div>
  *  <div class="u-cf" style="height: 200px">
  *    <div class="u-sizeFullHeight Test-highlight">
  *      content
  *    </div>
  *  </div>
  */
/**
 * Make an element the height of its parent.
 */
.u-sizeFullHeight {
  display: block !important;
  box-sizing: border-box !important;
  height: 100% !important; }

/**
  * @name Size Viewport
  * @description Fluidly fits to the viewport's height and width. Resize window to see changes.
  * @section utils.size.sizeView
  *
  *
  * @markup
  * <div class="u-cf">
  *  <div class="Test-box u-sizeViewFull">Sets this element's width to that of the viewport.</div>
  *  <div class="Test-box u-sizeViewFullHeight">Sets this element's height to that of the viewport.</div>
  *  <div class="Test-box u-sizeViewFullHeight--Min" style="width:50px">Set the height to at least the same height as the viewport size.</div>
  *  <div class="Test-box u-sizeViewFullHeight--Max" style="width:50px">Set the height to at most the same height as the viewport size.</div>
  * </div>
  */
/**
 * Make an element the width of the viewport
 */
.u-sizeViewFull {
  width: 100vw !important; }

/**
 * Make an element the height of the viewport
 */
.u-sizeViewFullHeight {
  height: 100vh !important; }

/**
 * Make an element's height at least as tall as the viewport
 */
.u-sizeViewFullHeight--Min {
  height: 100vm !important;
  height: 100vmin !important; }

/**
 * Make an element's height at most as tall as the viewport
 */
.u-sizeViewFullHeight--Max {
  height: 100vmax !important; }

/*@custom-media --lg-viewport (min-width:960px);*/
/**
* @name Utils Spacing
* @description Utilities for spacing elements using paddings and margins. Also supports 2 media queries. The custom-media configuration can be overriden by your app or excluded.
* @section utils.spacing.index
*
* @markup
@custom-media --sm-viewport (min-width:320px) and (max-width:640px);
@custom-media --md-viewport (min-width:640px) and (max-width:960px);
* 
*/
/**
* @name Utils Spacing - Margin Default
* @description Used to force margins on any element. Default margin spacing.  
* @section utils.spacing.margin.Default
*
* @markupUrl url(node_modules/hammock-utils-spacing/guide/spacing-margin-default.html)
*/
.m {
  margin: 1em !important; }

.mt {
  margin-top: 1em !important; }

.mr {
  margin-right: 1em !important; }

.mb {
  margin-bottom: 1em !important; }

.ml {
  margin-left: 1em !important; }

.mh {
  margin-right: 1em !important;
  margin-left: 1em !important; }

.mv {
  margin-top: 1em !important;
  margin-bottom: 1em !important; }

/**
* @name Utils Spacing - Margin Small
* @description Used to force margins on any element. Small variation. 
* @section utils.spacing.margin.Small
*
* @markupUrl url(node_modules/hammock-utils-spacing/guide/spacing-margin-small.html)
*/
.m- {
  margin: 0.5em !important; }

.mt- {
  margin-top: 0.5em !important; }

.mr- {
  margin-right: 0.5em !important; }

.mb- {
  margin-bottom: 0.5em !important; }

.ml- {
  margin-left: 0.5em !important; }

.mh- {
  margin-right: 0.5em !important;
  margin-left: 0.5em !important; }

.mv- {
  margin-top: 0.5em !important;
  margin-bottom: 0.5em !important; }

/**
* @name Utils Spacing - Margin Tiny
* @description Tiny variation. 
* @section utils.spacing.margin.Tiny
*
* @markupUrl url(node_modules/hammock-utils-spacing/guide/spacing-margin-tiny.html)
*/
.m-- {
  margin: 0.25em !important; }

.mt-- {
  margin-top: 0.25em !important; }

.mr-- {
  margin-right: 0.25em !important; }

.mb-- {
  margin-bottom: 0.25em !important; }

.ml-- {
  margin-left: 0.25em !important; }

.mh-- {
  margin-right: 0.25em !important;
  margin-left: 0.25em !important; }

.mv-- {
  margin-top: 0.25em !important;
  margin-bottom: 0.25em !important; }

/**
* @name Utils Spacing - Margin Large
* @description Used to force margins on any element. Large variation. 
* @section utils.spacing.margin.Large
*
* @markupUrl url(node_modules/hammock-utils-spacing/guide/spacing-margin-large.html)
*/
.m\+ {
  margin: 2em !important; }

.mt\+ {
  margin-top: 2em !important; }

.mr\+ {
  margin-right: 2em !important; }

.mb\+ {
  margin-bottom: 2em !important; }

.ml\+ {
  margin-left: 2em !important; }

.mh\+ {
  margin-right: 2em !important;
  margin-left: 2em !important; }

.mv\+ {
  margin-top: 2em !important;
  margin-bottom: 2em !important; }

/**
* @name Utils Spacing - Margin Huge
* @description Used to force margins on any element. Huge variation. 
* @section utils.spacing.margin.Huge
*
* @markupUrl url(node_modules/hammock-utils-spacing/guide/spacing-margin-huge.html)
*/
.m\+\+ {
  margin: 4em !important; }

.mt\+\+ {
  margin-top: 4em !important; }

.mr\+\+ {
  margin-right: 4em !important; }

.mb\+\+ {
  margin-bottom: 4em !important; }

.ml\+\+ {
  margin-left: 4em !important; }

.mh\+\+ {
  margin-right: 4em !important;
  margin-left: 4em !important; }

.mv\+\+ {
  margin-top: 4em !important;
  margin-bottom: 4em !important; }

/**
* @name Utils Spacing - No Margin 
* @description Used to force no margins on any element. 
* @section utils.spacing.margin.None
*
* @markupUrl url(node_modules/hammock-utils-spacing/guide/spacing-margin-none.html)
*/
.m0 {
  margin: 0 !important; }

.mt0 {
  margin-top: 0 !important; }

.mr0 {
  margin-right: 0 !important; }

.mb0 {
  margin-bottom: 0 !important; }

.ml0 {
  margin-left: 0 !important; }

.mh0 {
  margin-right: 0 !important;
  margin-left: 0 !important; }

.mv0 {
  margin-top: 0 !important;
  margin-bottom: 0 !important; }

/**
* @name Utils Spacing - Negative Default Margin 
* @description Used to force default negative margins on any element. 
* @section utils.spacing.negative.margin.Default
*
* @markupUrl url(node_modules/hammock-utils-spacing/guide/spacing-margin-negative.html)
*/
.-m {
  margin: -1em !important; }

.-mt {
  margin-top: -1em !important; }

.-mr {
  margin-right: -1em !important; }

.-mb {
  margin-bottom: -1em !important; }

.-ml {
  margin-left: -1em !important; }

.-mh {
  margin-right: -1em !important;
  margin-left: -1em !important; }

.-mv {
  margin-top: -1em !important;
  margin-bottom: -1em !important; }

/**
* @name Utils Spacing - Negative Margin Tiny
* @description Used to force negative margins on any element. Tiny variation.
* @section utils.spacing.negative.margin.Tiny
*
* @markupUrl url(node_modules/hammock-utils-spacing/guide/spacing-margin-negative-tiny.html)
*/
.-m-- {
  margin: -0.25em !important; }

.-mt-- {
  margin-top: -0.25em !important; }

.-mr-- {
  margin-right: -0.25em !important; }

.-mb-- {
  margin-bottom: -0.25em !important; }

.-ml-- {
  margin-left: -0.25em !important; }

.-mh-- {
  margin-right: -0.25em !important;
  margin-left: -0.25em !important; }

.-mv-- {
  margin-top: -0.25em !important;
  margin-bottom: -0.25em !important; }

/**
* @name Utils Spacing - Negative Margin Small
* @description Used to force negative margins on any element. Small variation.
* @section utils.spacing.negative.margin.Small
*
* @markupUrl url(node_modules/hammock-utils-spacing/guide/spacing-margin-negative-small.html)
*/
.-m- {
  margin: -0.5em !important; }

.-mt- {
  margin-top: -0.5em !important; }

.-mr- {
  margin-right: -0.5em !important; }

.-mb- {
  margin-bottom: -0.5em !important; }

.-ml- {
  margin-left: -0.5em !important; }

.-mh- {
  margin-right: -0.5em !important;
  margin-left: -0.5em !important; }

.-mv- {
  margin-top: -0.5em !important;
  margin-bottom: -0.5em !important; }

/**
* @name Utils Spacing - Negative Margin Large
* @description Used to force negative margins on any element. Large variation.
* @section utils.spacing.negative.margin.Large
*
* @markupUrl url(node_modules/hammock-utils-spacing/guide/spacing-margin-negative-large.html)
*/
.-m\+ {
  margin: -2em !important; }

.-mt\+ {
  margin-top: -2em !important; }

.-mr\+ {
  margin-right: -2em !important; }

.-mb\+ {
  margin-bottom: -2em !important; }

.-ml\+ {
  margin-left: -2em !important; }

.-mh\+ {
  margin-right: -2em !important;
  margin-left: -2em !important; }

.-mv\+ {
  margin-top: -2em !important;
  margin-bottom: -2em !important; }

/**
* @name Utils Spacing - Negative Margin Huge
* @description Used to force negative margins on any element. Huge variation.
* @section utils.spacing.negative.margin.Huge
*
* @markupUrl url(node_modules/hammock-utils-spacing/guide/spacing-margin-negative-huge.html)
*/
.-m\+\+ {
  margin: -4em !important; }

.-mt\+\+ {
  margin-top: -4em !important; }

.-mr\+\+ {
  margin-right: -4em !important; }

.-mb\+\+ {
  margin-bottom: -4em !important; }

.-ml\+\+ {
  margin-left: -4em !important; }

.-mh\+\+ {
  margin-right: -4em !important;
  margin-left: -4em !important; }

.-mv\+\+ {
  margin-top: -4em !important;
  margin-bottom: -4em !important; }

/**
* @name Utils Spacing - Padding Default
* @description Used to force paddings on any element. Default padding spacing. 
* @section utils.spacing.padding.Default
*
* @markupUrl url(node_modules/hammock-utils-spacing/guide/spacing-padding-default.html)
*/
.p {
  padding: 1em !important; }

.pt {
  padding-top: 1em !important; }

.pr {
  padding-right: 1em !important; }

.pb {
  padding-bottom: 1em !important; }

.pl {
  padding-left: 1em !important; }

.ph {
  padding-right: 1em !important;
  padding-left: 1em !important; }

.pv {
  padding-top: 1em !important;
  padding-bottom: 1em !important; }

/**
* @name Utils Spacing - Padding Small
* @description Used to force paddings on any element. Small variation. 
* @section utils.spacing.padding.Small
*
* @markupUrl url(node_modules/hammock-utils-spacing/guide/spacing-padding-small.html)
*/
.p- {
  padding: 0.5em !important; }

.pt- {
  padding-top: 0.5em !important; }

.pr- {
  padding-right: 0.5em !important; }

.pb- {
  padding-bottom: 0.5em !important; }

.pl- {
  padding-left: 0.5em !important; }

.ph- {
  padding-right: 0.5em !important;
  padding-left: 0.5em !important; }

.pv- {
  padding-top: 0.5em !important;
  padding-bottom: 0.5em !important; }

/**
* @name Utils Spacing - Padding Tiny
* @description Tiny variation. 
* @section utils.spacing.padding.Tiny
*
* @markupUrl url(node_modules/hammock-utils-spacing/guide/spacing-padding-tiny.html)
*/
.p-- {
  padding: 0.25em !important; }

.pt-- {
  padding-top: 0.25em !important; }

.pr-- {
  padding-right: 0.25em !important; }

.pb-- {
  padding-bottom: 0.25em !important; }

.pl-- {
  padding-left: 0.25em !important; }

.ph-- {
  padding-right: 0.25em !important;
  padding-left: 0.25em !important; }

.pv-- {
  padding-top: 0.25em !important;
  padding-bottom: 0.25em !important; }

/**
* @name Utils Spacing - Padding Large
* @description Used to force paddings on any element. Large variation. 
* @section utils.spacing.padding.Large
*
* @markupUrl url(node_modules/hammock-utils-spacing/guide/spacing-padding-large.html)
*/
.p\+ {
  padding: 2em !important; }

.pt\+ {
  padding-top: 2em !important; }

.pr\+ {
  padding-right: 2em !important; }

.pb\+ {
  padding-bottom: 2em !important; }

.pl\+ {
  padding-left: 2em !important; }

.ph\+ {
  padding-right: 2em !important;
  padding-left: 2em !important; }

.pv\+ {
  padding-top: 2em !important;
  padding-bottom: 2em !important; }

/**
* @name Utils Spacing - Padding Huge
* @description Used to force paddings on any element. Huge variation. 
* @section utils.spacing.padding.Huge
*
* @markupUrl url(node_modules/hammock-utils-spacing/guide/spacing-padding-huge.html)
*/
.p\+\+ {
  padding: 4em !important; }

.pt\+\+ {
  padding-top: 4em !important; }

.pr\+\+ {
  padding-right: 4em !important; }

.pb\+\+ {
  padding-bottom: 4em !important; }

.pl\+\+ {
  padding-left: 4em !important; }

.ph\+\+ {
  padding-right: 4em !important;
  padding-left: 4em !important; }

.pv\+\+ {
  padding-top: 4em !important;
  padding-bottom: 4em !important; }

/**
* @name Utils Spacing - No Padding 
* @description Used to force no paddings on any element. 
* @section utils.spacing.padding.None
*
* @markupUrl url(node_modules/hammock-utils-spacing/guide/spacing-padding-none.html)
*/
.p0 {
  padding: 0 !important; }

.pt0 {
  padding-top: 0 !important; }

.pr0 {
  padding-right: 0 !important; }

.pb0 {
  padding-bottom: 0 !important; }

.pl0 {
  padding-left: 0 !important; }

.ph0 {
  padding-right: 0 !important;
  padding-left: 0 !important; }

.pv0 {
  padding-top: 0 !important;
  padding-bottom: 0 !important; }

/*** something broken with postcss-mixin and how we pull it in. this use to compile perfectly fine. keeping it here for when we fix that issue 
    @mixin viewportPadding p 0.5;
    @mixin viewportMargin m 1 +;
***/
/*@define-mixin viewportMargin $class, $size, $suffix {
  &--$class$(suffix) { margin: calc(var(--spacing-unit) * $size) !important; }
  &--$(class)t$(suffix) { margin-top: calc(var(--spacing-unit) * $size) !important; }
  &--$(class)r$(suffix) { margin-right: calc(var(--spacing-unit) * $size) !important; }
  &--$(class)b$(suffix) { margin-bottom: calc(var(--spacing-unit) * $size) !important; }
  &--$(class)l$(suffix) { margin-left: calc(var(--spacing-unit) * $size) !important; }
  &--$(class)h$(suffix) { margin-right: calc(var(--spacing-unit) * $size) !important; margin-left: calc(var(--spacing-unit) * $size) !important; }
  &--$(class)v$(suffix) { margin-top: calc(var(--spacing-unit) * $size) !important; margin-bottom: calc(var(--spacing-unit) * $size) !important; }  
}
*/
/** media query **/
@media (min-width: 320px) and (max-width: 640px) {
  .sm--view-m {
    margin: 0.5em !important; }
  .sm--view-mt {
    margin-top: 0.5em !important; }
  .sm--view-mr {
    margin-right: 0.5em !important; }
  .sm--view-mb {
    margin-bottom: 0.5em !important; }
  .sm--view-ml {
    margin-left: 0.5em !important; }
  .sm--view-mh {
    margin-right: 0.5em !important;
    margin-left: 0.5em !important; }
  .sm--view-mv {
    margin-top: 0.5em !important;
    margin-bottom: 0.5em !important; }
  .sm--view-m- {
    margin: 0.25em !important; }
  .sm--view-mt- {
    margin-top: 0.25em !important; }
  .sm--view-mr- {
    margin-right: 0.25em !important; }
  .sm--view-mb- {
    margin-bottom: 0.25em !important; }
  .sm--view-ml- {
    margin-left: 0.25em !important; }
  .sm--view-mh- {
    margin-right: 0.25em !important;
    margin-left: 0.25em !important; }
  .sm--view-mv- {
    margin-top: 0.25em !important;
    margin-bottom: 0.25em !important; }
  .sm--view-m-- {
    margin: 0.125em !important; }
  .sm--view-mt-- {
    margin-top: 0.125em !important; }
  .sm--view-mr-- {
    margin-right: 0.125em !important; }
  .sm--view-mb-- {
    margin-bottom: 0.125em !important; }
  .sm--view-ml-- {
    margin-left: 0.125em !important; }
  .sm--view-mh-- {
    margin-right: 0.125em !important;
    margin-left: 0.125em !important; }
  .sm--view-mv-- {
    margin-top: 0.125em !important;
    margin-bottom: 0.125em !important; }
  .sm--view-m\+ {
    margin: 1em !important; }
  .sm--view-mt\+ {
    margin-top: 1em !important; }
  .sm--view-mr\+ {
    margin-right: 1em !important; }
  .sm--view-mb\+ {
    margin-bottom: 1em !important; }
  .sm--view-ml\+ {
    margin-left: 1em !important; }
  .sm--view-mh\+ {
    margin-right: 1em !important;
    margin-left: 1em !important; }
  .sm--view-mv\+ {
    margin-top: 1em !important;
    margin-bottom: 1em !important; }
  .sm--view-m\+\+ {
    margin: 2em !important; }
  .sm--view-mt\+\+ {
    margin-top: 2em !important; }
  .sm--view-mr\+\+ {
    margin-right: 2em !important; }
  .sm--view-mb\+\+ {
    margin-bottom: 2em !important; }
  .sm--view-ml\+\+ {
    margin-left: 2em !important; }
  .sm--view-mh\+\+ {
    margin-right: 2em !important;
    margin-left: 2em !important; }
  .sm--view-mv\+\+ {
    margin-top: 2em !important;
    margin-bottom: 2em !important; }
  .sm--view--m {
    margin: -2em !important; }
  .sm--view--mt {
    margin-top: -2em !important; }
  .sm--view--mr {
    margin-right: -2em !important; }
  .sm--view--mb {
    margin-bottom: -2em !important; }
  .sm--view--ml {
    margin-left: -2em !important; }
  .sm--view--mh {
    margin-right: -2em !important;
    margin-left: -2em !important; }
  .sm--view--mv {
    margin-top: -2em !important;
    margin-bottom: -2em !important; }
  .sm--view--m-- {
    margin: -0.5em !important; }
  .sm--view--mt-- {
    margin-top: -0.5em !important; }
  .sm--view--mr-- {
    margin-right: -0.5em !important; }
  .sm--view--mb-- {
    margin-bottom: -0.5em !important; }
  .sm--view--ml-- {
    margin-left: -0.5em !important; }
  .sm--view--mh-- {
    margin-right: -0.5em !important;
    margin-left: -0.5em !important; }
  .sm--view--mv-- {
    margin-top: -0.5em !important;
    margin-bottom: -0.5em !important; }
  .sm--view--m- {
    margin: -1em !important; }
  .sm--view--mt- {
    margin-top: -1em !important; }
  .sm--view--mr- {
    margin-right: -1em !important; }
  .sm--view--mb- {
    margin-bottom: -1em !important; }
  .sm--view--ml- {
    margin-left: -1em !important; }
  .sm--view--mh- {
    margin-right: -1em !important;
    margin-left: -1em !important; }
  .sm--view--mv- {
    margin-top: -1em !important;
    margin-bottom: -1em !important; }
  .sm--view--m\+ {
    margin: -4em !important; }
  .sm--view--mt\+ {
    margin-top: -4em !important; }
  .sm--view--mr\+ {
    margin-right: -4em !important; }
  .sm--view--mb\+ {
    margin-bottom: -4em !important; }
  .sm--view--ml\+ {
    margin-left: -4em !important; }
  .sm--view--mh\+ {
    margin-right: -4em !important;
    margin-left: -4em !important; }
  .sm--view--mv\+ {
    margin-top: -4em !important;
    margin-bottom: -4em !important; }
  .sm--view--m\+\+ {
    margin: -8em !important; }
  .sm--view--mt\+\+ {
    margin-top: -8em !important; }
  .sm--view--mr\+\+ {
    margin-right: -8em !important; }
  .sm--view--mb\+\+ {
    margin-bottom: -8em !important; }
  .sm--view--ml\+\+ {
    margin-left: -8em !important; }
  .sm--view--mh\+\+ {
    margin-right: -8em !important;
    margin-left: -8em !important; }
  .sm--view--mv\+\+ {
    margin-top: -8em !important;
    margin-bottom: -8em !important; }
  .sm--view-p {
    padding: 0.5em !important; }
  .sm--view-pt {
    padding-top: 0.5em !important; }
  .sm--view-pr {
    padding-right: 0.5em !important; }
  .sm--view-pb {
    padding-bottom: 0.5em !important; }
  .sm--view-pl {
    padding-left: 0.5em !important; }
  .sm--view-ph {
    padding-right: 0.5em !important;
    padding-left: 0.5em !important; }
  .sm--view-pv {
    padding-top: 0.5em !important;
    padding-bottom: 0.5em !important; }
  .sm--view-p- {
    padding: 0.25em !important; }
  .sm--view-pt- {
    padding-top: 0.25em !important; }
  .sm--view-pr- {
    padding-right: 0.25em !important; }
  .sm--view-pb- {
    padding-bottom: 0.25em !important; }
  .sm--view-pl- {
    padding-left: 0.25em !important; }
  .sm--view-ph- {
    padding-right: 0.25em !important;
    padding-left: 0.25em !important; }
  .sm--view-pv- {
    padding-top: 0.25em !important;
    padding-bottom: 0.25em !important; }
  .sm--view-p-- {
    padding: 0.125em !important; }
  .sm--view-pt-- {
    padding-top: 0.125em !important; }
  .sm--view-pr-- {
    padding-right: 0.125em !important; }
  .sm--view-pb-- {
    padding-bottom: 0.125em !important; }
  .sm--view-pl-- {
    padding-left: 0.125em !important; }
  .sm--view-ph-- {
    padding-right: 0.125em !important;
    padding-left: 0.125em !important; }
  .sm--view-pv-- {
    padding-top: 0.125em !important;
    padding-bottom: 0.125em !important; }
  .sm--view-p\+ {
    padding: 1em !important; }
  .sm--view-pt\+ {
    padding-top: 1em !important; }
  .sm--view-pr\+ {
    padding-right: 1em !important; }
  .sm--view-pb\+ {
    padding-bottom: 1em !important; }
  .sm--view-pl\+ {
    padding-left: 1em !important; }
  .sm--view-ph\+ {
    padding-right: 1em !important;
    padding-left: 1em !important; }
  .sm--view-pv\+ {
    padding-top: 1em !important;
    padding-bottom: 1em !important; }
  .sm--view-p\+\+ {
    padding: 2em !important; }
  .sm--view-pt\+\+ {
    padding-top: 2em !important; }
  .sm--view-pr\+\+ {
    padding-right: 2em !important; }
  .sm--view-pb\+\+ {
    padding-bottom: 2em !important; }
  .sm--view-pl\+\+ {
    padding-left: 2em !important; }
  .sm--view-ph\+\+ {
    padding-right: 2em !important;
    padding-left: 2em !important; }
  .sm--view-pv\+\+ {
    padding-top: 2em !important;
    padding-bottom: 2em !important; } }

@media (min-width: 640px) and (max-width: 960px) {
  .md--view-m {
    margin: 0.75em !important; }
  .md--view-mt {
    margin-top: 0.75em !important; }
  .md--view-mr {
    margin-right: 0.75em !important; }
  .md--view-mb {
    margin-bottom: 0.75em !important; }
  .md--view-ml {
    margin-left: 0.75em !important; }
  .md--view-mh {
    margin-right: 0.75em !important;
    margin-left: 0.75em !important; }
  .md--view-mv {
    margin-top: 0.75em !important;
    margin-bottom: 0.75em !important; }
  .md--view-m- {
    margin: 0.375em !important; }
  .md--view-mt- {
    margin-top: 0.375em !important; }
  .md--view-mr- {
    margin-right: 0.375em !important; }
  .md--view-mb- {
    margin-bottom: 0.375em !important; }
  .md--view-ml- {
    margin-left: 0.375em !important; }
  .md--view-mh- {
    margin-right: 0.375em !important;
    margin-left: 0.375em !important; }
  .md--view-mv- {
    margin-top: 0.375em !important;
    margin-bottom: 0.375em !important; }
  .md--view-m-- {
    margin: 0.1875em !important; }
  .md--view-mt-- {
    margin-top: 0.1875em !important; }
  .md--view-mr-- {
    margin-right: 0.1875em !important; }
  .md--view-mb-- {
    margin-bottom: 0.1875em !important; }
  .md--view-ml-- {
    margin-left: 0.1875em !important; }
  .md--view-mh-- {
    margin-right: 0.1875em !important;
    margin-left: 0.1875em !important; }
  .md--view-mv-- {
    margin-top: 0.1875em !important;
    margin-bottom: 0.1875em !important; }
  .md--view-m\+ {
    margin: 1.5em !important; }
  .md--view-mt\+ {
    margin-top: 1.5em !important; }
  .md--view-mr\+ {
    margin-right: 1.5em !important; }
  .md--view-mb\+ {
    margin-bottom: 1.5em !important; }
  .md--view-ml\+ {
    margin-left: 1.5em !important; }
  .md--view-mh\+ {
    margin-right: 1.5em !important;
    margin-left: 1.5em !important; }
  .md--view-mv\+ {
    margin-top: 1.5em !important;
    margin-bottom: 1.5em !important; }
  .md--view-m\+\+ {
    margin: 3em !important; }
  .md--view-mt\+\+ {
    margin-top: 3em !important; }
  .md--view-mr\+\+ {
    margin-right: 3em !important; }
  .md--view-mb\+\+ {
    margin-bottom: 3em !important; }
  .md--view-ml\+\+ {
    margin-left: 3em !important; }
  .md--view-mh\+\+ {
    margin-right: 3em !important;
    margin-left: 3em !important; }
  .md--view-mv\+\+ {
    margin-top: 3em !important;
    margin-bottom: 3em !important; }
  .md--view--m {
    margin: -1.33333em !important; }
  .md--view--mt {
    margin-top: -1.33333em !important; }
  .md--view--mr {
    margin-right: -1.33333em !important; }
  .md--view--mb {
    margin-bottom: -1.33333em !important; }
  .md--view--ml {
    margin-left: -1.33333em !important; }
  .md--view--mh {
    margin-right: -1.33333em !important;
    margin-left: -1.33333em !important; }
  .md--view--mv {
    margin-top: -1.33333em !important;
    margin-bottom: -1.33333em !important; }
  .md--view--m-- {
    margin: -0.33333em !important; }
  .md--view--mt-- {
    margin-top: -0.33333em !important; }
  .md--view--mr-- {
    margin-right: -0.33333em !important; }
  .md--view--mb-- {
    margin-bottom: -0.33333em !important; }
  .md--view--ml-- {
    margin-left: -0.33333em !important; }
  .md--view--mh-- {
    margin-right: -0.33333em !important;
    margin-left: -0.33333em !important; }
  .md--view--mv-- {
    margin-top: -0.33333em !important;
    margin-bottom: -0.33333em !important; }
  .md--view--m- {
    margin: -0.66667em !important; }
  .md--view--mt- {
    margin-top: -0.66667em !important; }
  .md--view--mr- {
    margin-right: -0.66667em !important; }
  .md--view--mb- {
    margin-bottom: -0.66667em !important; }
  .md--view--ml- {
    margin-left: -0.66667em !important; }
  .md--view--mh- {
    margin-right: -0.66667em !important;
    margin-left: -0.66667em !important; }
  .md--view--mv- {
    margin-top: -0.66667em !important;
    margin-bottom: -0.66667em !important; }
  .md--view--m\+ {
    margin: -2.66667em !important; }
  .md--view--mt\+ {
    margin-top: -2.66667em !important; }
  .md--view--mr\+ {
    margin-right: -2.66667em !important; }
  .md--view--mb\+ {
    margin-bottom: -2.66667em !important; }
  .md--view--ml\+ {
    margin-left: -2.66667em !important; }
  .md--view--mh\+ {
    margin-right: -2.66667em !important;
    margin-left: -2.66667em !important; }
  .md--view--mv\+ {
    margin-top: -2.66667em !important;
    margin-bottom: -2.66667em !important; }
  .md--view--m\+\+ {
    margin: -5.33333em !important; }
  .md--view--mt\+\+ {
    margin-top: -5.33333em !important; }
  .md--view--mr\+\+ {
    margin-right: -5.33333em !important; }
  .md--view--mb\+\+ {
    margin-bottom: -5.33333em !important; }
  .md--view--ml\+\+ {
    margin-left: -5.33333em !important; }
  .md--view--mh\+\+ {
    margin-right: -5.33333em !important;
    margin-left: -5.33333em !important; }
  .md--view--mv\+\+ {
    margin-top: -5.33333em !important;
    margin-bottom: -5.33333em !important; }
  .md--view-p {
    padding: 0.75em !important; }
  .md--view-pt {
    padding-top: 0.75em !important; }
  .md--view-pr {
    padding-right: 0.75em !important; }
  .md--view-pb {
    padding-bottom: 0.75em !important; }
  .md--view-pl {
    padding-left: 0.75em !important; }
  .md--view-ph {
    padding-right: 0.75em !important;
    padding-left: 0.75em !important; }
  .md--view-pv {
    padding-top: 0.75em !important;
    padding-bottom: 0.75em !important; }
  .md--view-p- {
    padding: 0.375em !important; }
  .md--view-pt- {
    padding-top: 0.375em !important; }
  .md--view-pr- {
    padding-right: 0.375em !important; }
  .md--view-pb- {
    padding-bottom: 0.375em !important; }
  .md--view-pl- {
    padding-left: 0.375em !important; }
  .md--view-ph- {
    padding-right: 0.375em !important;
    padding-left: 0.375em !important; }
  .md--view-pv- {
    padding-top: 0.375em !important;
    padding-bottom: 0.375em !important; }
  .md--view-p-- {
    padding: 0.1875em !important; }
  .md--view-pt-- {
    padding-top: 0.1875em !important; }
  .md--view-pr-- {
    padding-right: 0.1875em !important; }
  .md--view-pb-- {
    padding-bottom: 0.1875em !important; }
  .md--view-pl-- {
    padding-left: 0.1875em !important; }
  .md--view-ph-- {
    padding-right: 0.1875em !important;
    padding-left: 0.1875em !important; }
  .md--view-pv-- {
    padding-top: 0.1875em !important;
    padding-bottom: 0.1875em !important; }
  .md--view-p\+ {
    padding: 1.5em !important; }
  .md--view-pt\+ {
    padding-top: 1.5em !important; }
  .md--view-pr\+ {
    padding-right: 1.5em !important; }
  .md--view-pb\+ {
    padding-bottom: 1.5em !important; }
  .md--view-pl\+ {
    padding-left: 1.5em !important; }
  .md--view-ph\+ {
    padding-right: 1.5em !important;
    padding-left: 1.5em !important; }
  .md--view-pv\+ {
    padding-top: 1.5em !important;
    padding-bottom: 1.5em !important; }
  .md--view-p\+\+ {
    padding: 3em !important; }
  .md--view-pt\+\+ {
    padding-top: 3em !important; }
  .md--view-pr\+\+ {
    padding-right: 3em !important; }
  .md--view-pb\+\+ {
    padding-bottom: 3em !important; }
  .md--view-pl\+\+ {
    padding-left: 3em !important; }
  .md--view-ph\+\+ {
    padding-right: 3em !important;
    padding-left: 3em !important; }
  .md--view-pv\+\+ {
    padding-top: 3em !important;
    padding-bottom: 3em !important; } }

/**
 * Word breaking
 *
 * Break strings when their length exceeds the width of their container.
 */
.u-textBreak {
  word-wrap: break-word !important; }

/**
 * Horizontal text alignment
 */
.u-textCenter {
  text-align: center !important; }

.u-textLeft {
  text-align: left !important; }

.u-textRight {
  text-align: right !important; }

/**
 * Inherit the ancestor's text color.
 */
.u-textInheritColor {
  color: inherit !important; }

/**
 * Enables font kerning in all browsers.
 * http://blog.typekit.com/2014/02/05/kerning-on-the-web/
 *
 * 1. Chrome (not Windows), Firefox, Safari 6+, iOS, Android
 * 2. Chrome (not Windows), Firefox, IE 10+
 * 3. Safari 7 and future browsers
 */
.u-textKern {
  text-rendering: optimizeLegibility;
  /* 1 */
  -webkit-font-feature-settings: "kern" 1, "kern";
  -moz-font-feature-settings: "kern" 1, "kern";
  font-feature-settings: "kern" 1, "kern";
  /* 2 */
  -webkit-font-kerning: normal;
  -moz-font-kerning: normal;
  font-kerning: normal;
  /* 3 */ }

/**
 * Prevent whitespace wrapping
 */
.u-textNoWrap {
  white-space: nowrap !important; }

/**
 * Text truncation
 *
 * Prevent text from wrapping onto multiple lines, and truncate with an
 * ellipsis.
 *
 * 1. Ensure that the node has a maximum width after which truncation can
 *    occur.
 * 2. Fix for IE 8/9 if `word-wrap: break-word` is in effect on ancestor
 *    nodes.
 */
.u-textTruncate {
  overflow: hidden !important;
  max-width: 100%;
  /* 1 */
  text-overflow: ellipsis !important;
  white-space: nowrap !important;
  word-wrap: normal !important;
  /* 2 */ }

/**
  * @name Text Utilities
  * @description Utilities for text.
  * @section utils.text.index
  *
  * @markupUrl url(node_modules/hammock-utils-text/guide/default.html)
  */
/**
  * @name Text Breaks
  * @description Breaks stings across multiple lines, when they are wider than the container.
  * @section utils.text.breaks
  *
  * @markupUrl url(node_modules/hammock-utils-text/guide/breaks.html)
  */
/**
  * @name Text Alignment
  * @description Used to control text alignment and justification.
  * @section utils.text.alignment
  *
  * @markupUrl url(node_modules/hammock-utils-text/guide/alignment.html)
  */
/**
  * @name Text Inherit Color
  * @description Should inherit the color set by an ancestor. (Useful for linked anchor elements.)
  * @section utils.text.inheritColor
  *
  *
  * @markup
  * <div class="Test-box">
  *   <a class="u-textInheritColor" href="#pound">Should always be black</a>
  * </div>
  */
/**
  * @name Text Kerning
  * @description Should enable kerning in the supported browsers.
  * @section utils.text.kerning
  *
  *
  * @markup
  * <div style="font-family:arial;font-size:20px">
  *   <div>The quick brown fox jumps over the lazy dog (default)</div>
  *   <div class="u-textKern">The quick brown fox jumps over the lazy dog (kerning enabled)</div>
  * </div>
  */
/**
  * @name Text No Wrap
  * @description Should not wrap the text.
  * @section utils.text.noWrap
  *
  *
  * @markup
  * <div class="Test-box u-textNoWrap">
  *   Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla hendrerit blandit dolor, at euismod ante eleifend in. Duis imperdiet cursus nibh, quis tincidunt nibh rhoncus at.
  * </div>
  */
/**
  * @name Text Truncate
  * @description Should truncate the text to a single line with ellipsis at the end.
  * @section utils.text.truncate
  *
  *
  * @markup
  * <div class="Test-box u-textTruncate">
  *     Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla hendrerit blandit dolor, at euismod ante eleifend in. Duis imperdiet cursus nibh, quis tincidunt nibh rhoncus at.
  * </div>
  */
/**
  * @name Text Transform
  * @description Should capitalize or uppercase text
  * @section utils.text.transform
  *
  *
  * @markup
  * <div class="Test-box u-textUpper">
  *     lorem ipsum dolor sit amet
  * </div>
  * <div class="Test-box u-textCap">
  *     lorem ipsum dolor sit amet
  * </div>
  */
.u-textUpper {
  text-transform: uppercase !important; }

.u-textCap {
  text-transform: capitalize !important; }

.u-posAbsolute {
  position: absolute !important; }

/**
 * Pins to all corners by default. But when a width and/or height are
 * provided, the element will be centered in its nearest relatively-positioned
 * ancestor.
 */
.u-posAbsoluteCenter {
  position: absolute !important;
  top: 0 !important;
  right: 0 !important;
  bottom: 0 !important;
  left: 0 !important;
  margin: auto !important; }

/**
 * 1. Make sure fixed elements are promoted into a new layer, for performance
 *    reasons.
 */
.u-posFixed {
  position: fixed !important;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  /* 1 */ }

.u-posRelative {
  position: relative !important; }

.u-posStatic {
  position: static !important; }

/**
  * @name Position Utilities
  * @description Utilities for position.
  * @section utils.position.index
  *
  *
  * @markup
  * <style>
  *   .Test-area {
  *     border: 1px solid black;
  *     height: 200px;
  *     width: 200px;
  *   }
  *   .Test-box {
  *     display: inline-block;
  *     height: 20px;
  *     width: 20px;
  *   }
  *   .Test-highlight {
  *     background: blue;
  *   }
  *   .Test-fixed {
  *     top: 200px;
  *     right: 200px;
  *   }
  * </style>
  */
/**
  * @name Position Utilities - Absolute & Relative
  * @description Positioning elements using absolute and relative positioning.
  * @section utils.position.absolute
  *
  *
  * @markup
  *  <div class="Test-area u-posRelative" id="center">
  *    <span class="u-posAbsoluteCenter Test-highlight"></span>
  *  </div>
  *  <div class="Test-area u-posRelative" id="center">
  *    <span class="u-posAbsoluteCenter Test-highlight Test-box"></span>
  *  </div>
  */
/**
  * @name Position Utilities - Fixed
  * @description Elements can be fixed to the viewport. Fixed elements are promoted to a new layer for performance.
  * @section utils.position.fixed
  *
  *
  * @markup
  *   <span class="u-posFixed Test-highlight Test-box Test-fixed"></span>
  */
/**
  * @name Position Utilities - Static
  * @description Elements can be formally set to static.
  * @section utils.position.static
  *
  *
  * @markup
  *   <span class="u-posStatic Test-highlight Test-box"></span>
  */
/**
  * @name Position Utilities - Absolute with Top/Left/Bottom/Right
  * @description Elements can be explicitly positioned with top/left/bottom/right for fixed or absolute positioning.
  * @section utils.position.absolute
  *
  * @markupUrl url(node_modules/hammock-utils-position/guide/templates/declareposition.html)
  */
.u-posTop {
  top: 0; }

.u-posLeft {
  left: 0; }

.u-posRight {
  right: 0; }

.u-posBottom {
  bottom: 0; }

/**
 * Clean link
 *
 * A link without any text-decoration at all.
 */
.u-linkClean,
.u-linkClean:hover,
.u-linkClean:focus,
.u-linkClean:active {
  text-decoration: none !important; }

/**
 * Link complex
 *
 * A common pattern is to have a link with several pieces of text and/or an
 * icon, where only one piece of text should display the underline when the
 * link is the subject of user interaction.
 *
 * Example HTML:
 *
 * <a class="u-linkComplex" href="#">
 *   Link complex
 *   <span class="u-linkComplexTarget">target</span>
 * </a>
 */
.u-linkComplex,
.u-linkComplex:hover,
.u-linkComplex:focus,
.u-linkComplex:active {
  text-decoration: none !important; }

.u-linkComplex:hover .u-linkComplexTarget,
.u-linkComplex:focus .u-linkComplexTarget,
.u-linkComplex:active .u-linkComplexTarget {
  text-decoration: underline !important; }

/**
 * Block-level link
 *
 * Combination of traits commonly used in vertical navigation lists.
 */
.u-linkBlock,
.u-linkBlock:hover,
.u-linkBlock:focus,
.u-linkBlock:active {
  display: block !important;
  text-decoration: none !important; }

/**
  * @name Link Utilities
  * @description Utilities for controlling basic link display.
  * @section utils.link.index
  *
  */
/**
  * @name Link Utilities - Block
  * @description Renders a block-level link with no text decoration for any state
  * @section utils.link.block
  *
  *
  * @markup
  * <div class="Test-area">
  *   <a class="u-linkBlock" href="#">Link text</a>
  * </div>
  */
/**
  * @name Link Utilities - Clean
  * @description Renders a link with no text decoration for any state
  * @section utils.link.clean
  *
  *
  * @markup
  * <div class="Test-area">
  *   <a class="u-linkClean" href="#">Link text</a>
  * </div>
  */
/**
  * @name Link Utilities - Block
  * @description Renders a link with only specified targets received text decoration.
  * @section utils.link.complex
  *
  *
  * @markup
  * <div class="Test-area">
  *   <a class="u-linkComplex" href="#">
  *     Link complex
  *     <span class="u-linkComplexTarget">target</span>
  *   </a>
  * </div>
  */
/**
 * Contain floats
 *
 * Make an element expand to contain floated children.
 * Uses pseudo-elements (micro clearfix).
 *
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of the
 *    element.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */
.u-cf:before,
.u-cf:after {
  display: table;
  /* 2 */
  content: " ";
  /* 1 */ }

.u-cf:after {
  clear: both; }

/**
 * New block formatting context
 *
 * This affords some useful properties to the element. It won't wrap under
 * floats. Will also contain any floated children.

 * N.B. This will clip overflow. Use the alternative method below if this is
 * problematic.
 */
.u-nbfc {
  overflow: hidden !important; }

/**
 * New block formatting context (alternative)
 *
 * Alternative method when overflow must not be clipped.
 *
 * 1. Create a new block formatting context (NBFC).
 * 2. Avoid shrink-wrap behaviour of table-cell.
 *
 * N.B. This breaks down in some browsers when elements within this element
 * exceed its width.
 */
.u-nbfcAlt {
  display: table-cell !important;
  /* 1 */
  width: 10000px !important;
  /* 2 */ }

/**
 * Floats
 */
.u-floatLeft {
  float: left !important; }

.u-floatRight {
  float: right !important; }

/**
  * @name Layout Utilities
  * @description Utilities for layout.
  * @section utils.layout.index
  * @markup
  * <style>
  *   .test-Box {
  *     background: #649632;
  *     height: 100px;
  *     width: 100px;
  *   }
  *   .test-Highlight {
  *     background: #ff0;
  *   }
  * </style>
  */
/**
  * @name Layout Utilities - clearfix
  * @description Contains & clears floats
  * @section utils.layout.clearfix
  *
  *
  * @markup
  * <div class="u-cf">
  *   <div class="test-Box" style="float:left"></div>
  *   <div class="test-Box" style="float:left; margin-left:10px"></div>
  * </div>
  */
/**
  * @name Layout Utilities - floats left
  * @description Floats left
  * @section utils.layout.floatLeft
  *
  *
  * @markup
  * <div class="u-cf">
  *   <div class="test-Box u-floatLeft"></div>
  * </div>
  */
/**
  * @name Layout Utilities - floats right
  * @description Floats right
  * @section utils.layout.floatRight
  *
  *
  * @markup
  * <div class="u-cf">
  *   <div class="test-Box u-floatRight"></div>
  * </div>
  */
/**
  * @name Layout Utilities - floats none
  * @description Floats None
  * @section utils.layout.floatNone
  *
  *
  * @markup
  * <div class="u-cf">
  *   <div class="test-Box u-floatNone" style="float:right"></div>
  * </div>
  */
.u-floatNone {
  float: none !important; }

/**
  * @name Layout Utilities - New Block Context
  * @description Create s a new block formatting context. This will clip overflow.
  * @section utils.layout.newBlockFormattingContext
  *
  *
  * @markup
  * <div class="test-Highlight" style="width:300px;">
  *   <div class="test-Box u-floatLeft"></div>
  *   <div class="u-nbfc">
  *     <p>The text should not wrap under the float.</p>
  *     <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras ut tincidunt nulla. Suspendisse semper, nisl vitae ultricies vulputate, metus tortor tincidunt neque, sed feugiat lacus ipsum eu neque. Mauris pharetra facilisis turpis, ac lacinia justo fermentum vel. Maecenas sed semper nisi. Integer sed erat nec sem mattis dignissim.</p>
  *   </div>
  * </div>
  */
/**
  * @name Layout Utilities - New Block Context
  * @description Create s a new block formatting context. Useful when overflow must not be clipped.
  * @section utils.layout.newBlockFormattingContextAlt
  *
  *
  * @markup
  * <div class="test-Highlight" style="width:300px;">
  *   <div class="test-Box u-floatLeft"></div>
  *   <div class="u-nbfcAlt">
  *     <p>The text should not wrap under the float.</p>
  *     <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras ut tincidunt nulla. Suspendisse semper, nisl vitae ultricies vulputate, metus tortor tincidunt neque, sed feugiat lacus ipsum eu neque. Mauris pharetra facilisis turpis, ac lacinia justo fermentum vel. Maecenas sed semper nisi. Integer sed erat nec sem mattis dignissim.</p>
  *   </div>
  * </div>
  */
/** @define Grid; use strict */
/**
 * Core grid component
 *
 * DO NOT apply dimension or offset utilities to the `Grid` element. All cell
 * widths and offsets should be applied to child grid cells.
 */
/* Grid container
   ========================================================================== */
/**
 * All content must be contained within child `Grid-cell` elements.
 *
 * 1. Account for browser defaults of elements that might be the root node of
 *    the component.
 * 2. Remove inter-cell whitespace that appears between `inline-block` child
 *    elements.
 * 3. Ensure consistent default alignment.
 */
.Grid {
  display: block;
  /* 1 */
  margin: 0;
  /* 1 */
  padding: 0;
  /* 1 */
  text-align: left;
  /* 3 */
  font-size: 0;
  /* 2 */ }

/**
 * Modifier: center align all grid cells
 */
.Grid--alignCenter {
  text-align: center; }

/**
 * Modifier: right align all grid cells
 */
.Grid--alignRight {
  text-align: right; }

/**
 * Modifier: middle-align grid cells
 */
.Grid--alignMiddle > .Grid-cell {
  vertical-align: middle; }

/**
 * Modifier: bottom-align grid cells
 */
.Grid--alignBottom > .Grid-cell {
  vertical-align: bottom; }

/**
 * Modifier: gutters
 *
 * NOTE: this can trigger a horizontal scrollbar if the component is as wide as
 * the viewport. Use padding on a container, or `overflow-x:hidden` to protect
 * against it.
 */
.Grid--withGutter {
  margin: 0 -10px; }

.Grid--withGutter > .Grid-cell {
  padding: 0 10px; }

/* Grid cell
   ========================================================================== */
/**
 * No explicit width by default. Rely on combining `Grid-cell` with a dimension
 * utility or a component class that extends 'grid'.
 *
 * 1. Fundamentals of the non-float grid layout.
 * 2. Reset font size change made in `Grid`.
 * 3. Keeps content correctly aligned with the grid direction.
 * 4. Controls vertical positioning of units.
 * 5. Make cells full-width by default.
 */
.Grid-cell {
  display: inline-block;
  /* 1 */
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  width: 100%;
  /* 5 */
  vertical-align: top;
  /* 4 */
  text-align: left;
  /* 3 */
  font-size: 16px;
  font-size: 1rem;
  /* 2 */ }

/**
 * Modifier: horizontally center one unit
 * Set a specific unit to be horizontally centered. Doesn't affect
 * any other units. Can still contain a child `Grid` object.
 */
.Grid-cell--center {
  display: block;
  margin: 0 auto; }

/**
  * @name Grid Component - Setup
  * @description Some style to help illustrate the grid component.
  * @section components.grid.index
  *
  *
  * @markupUrl url(node_modules/hammock-components-grid/guide/setup.html)
  */
/**
  * @name Grid Component - Default
  * @description the most basic usage of grid.
  * @section components.grid.index
  *
  * 
  * @markupUrl url(node_modules/hammock-components-grid/guide/default.html)
  */
/**
  * @name Grid - Align Center
  * @description center-align all grid cells but not their content
  * @section components.grid.alignCenter
  *
  *
  * @markupUrl url(node_modules/hammock-components-grid/guide/alignCenter.html)
  */
/**
  * @name Grid - Align Right
  * @description right-align all grid cells but not their content
  * @section components.grid.alignCenter
  *
  *
  * @markupUrl url(node_modules/hammock-components-grid/guide/alignRight.html)
  */
/**
  * @name Grid - Align Middle
  * @description middle-align all grid cells
  * @section components.grid.alignMiddle
  *
  *
  * @markupUrl url(node_modules/hammock-components-grid/guide/alignMiddle.html)
  */
/**
  * @name Grid - Align Bottom
  * @description bottom align grid cells
  * @section components.grid.alignBottom
  *
  *
  * @markupUrl url(node_modules/hammock-components-grid/guide/alignBottom.html)
  */
/**
  * @name Grid - Align Center Single Cell 
  * @description 
  * @section components.grid.cellCenter
  *
  * @markupUrl url(node_modules/hammock-components-grid/guide/cellCenter.html)
  */
/**
  * @name Grid - With Gutters 
  * @description grid with gutters
  * @section components.grid.gutters
  *
  *
  * @markupUrl url(node_modules/hammock-components-grid/guide/gutters.html)
  */
/** @define Arrange */
/**
 * This component lets you lay out a row of cells in various ways. You can
 * specify whether a cell should be wide enough to fit its content, or take up
 * the remaining space in the row. It's also possible to give all cells an
 * equal width, and to control their vertical alignment.
 */
/**
 * 1. Protect against the component expanding beyond the confines of its
 *    container if properties affecting the box-model are applied to the
 *    component. Mainly necessary because of (5).
 * 2. Rely on table layout.
 * 3. Zero out the default spacing that might be on an element (e.g., `ul`).
 * 4. Make sure the component fills at least the full width of its parent.
 * 5. Reset the table-layout algorithm in case a component is nested.
 */
.Arrange {
  display: table;
  /* 2 */
  box-sizing: border-box;
  /* 1 */
  margin: 0;
  /* 3 */
  padding: 0;
  /* 3 */
  min-width: 100%;
  /* 4 */
  table-layout: auto;
  /* 5 */ }

/**
 * There are two possible types of child. `sizeFill` will expand to fill all
 * of the remaining space not filled by `sizeFit` elements.
 *
 * 1. Zero out any default spacing that might be on an element (e.g., `li`);
 *    Margin has no effect when coupled with `display: table-cell`.
 * 2. All cells are top-aligned by default
 */
.Arrange-sizeFill,
.Arrange-sizeFit {
  display: table-cell;
  padding: 0;
  /* 1 */
  vertical-align: top;
  /* 2 */ }

/**
 * Make sure the main content block expands to fill the remaining space.
 */
.Arrange-sizeFill {
  width: 100%; }

/**
 * Where possible, protect against large images breaking the layout. Prevent them from
 * exceeding the width of the main content block by making them fluid.
 *
 * Only work for all browsers with the `Arrange--equally` variant. For Firefox
 * and IE to constrain image dimensions for other layouts, large images will
 * need their width set to `100%`.
 */
.Arrange-sizeFill img {
  max-width: 100%;
  height: auto; }

/**
 * Defend against a side-effect of this layout pattern: images in
 * 'Arrange-sizeFit' cannot be fluid, otherwise they lose their ability to
 * provide size to a cell.
 */
.Arrange-sizeFit img {
  max-width: none !important;
  width: auto !important; }

/* Vertical alignment modifiers
   ========================================================================== */
.Arrange--middle .Arrange-sizeFill,
.Arrange--middle .Arrange-sizeFit {
  vertical-align: middle; }

.Arrange--bottom .Arrange-sizeFill,
.Arrange--bottom .Arrange-sizeFit {
  vertical-align: bottom; }

/* Equal-width modifier
   ========================================================================== */
/**
 * This layout algorithm will create equal-width table cells, irrespective of
 * the width of their content.
 *
 * 1. The layout algorithm requires a set width to correctly calculate table
 *    cell width.
 */
.Arrange--equal {
  width: 100%;
  /* 1 */
  table-layout: fixed; }

/**
 * Give the cells an equal width. This value ensures that Arrange is still 100%
 * wide when gutters are used in conjunctions with equal-width cells.
 *
 * It's recommended that only 'Arrange-sizeFill' be used for equal width cells.
 * Their inner images will automatically be responsive.
 */
.Arrange--equal > .Arrange-sizeFill,
.Arrange--equal > .Arrange-sizeFit {
  width: 1%; }

/* Gutter modifier
   ========================================================================== */
/**
 * Add a gutter between cells
 *
 * NOTE: this can trigger a horizontal scrollbar if the component is as wide as
 * the viewport. Use padding on a container, or `overflow-x:hidden` to protect
 * against it.
 */
.Arrange--withGutter {
  margin: 0 -5px; }

.Arrange--withGutter > .Arrange-sizeFit,
.Arrange--withGutter > .Arrange-sizeFill {
  padding: 0 5px; }

/**
  * @name Arrange Component
  * @description This component lets you lay out a row of cells in various ways. You can specify whether a cell should be wide enough to fit its content, or take up the remaining space in the row. It's also possible to give all cells an equal width, and to control their vertical alignment.
  * @section components.arrange.index
  *
  *
  * @markup
  * <style>
  *   .fixture-Box {
  *     background: rgb(100, 150, 50);
  *     border: 1px solid black;
  *     min-height: 150px;
  *     width: 150px;
  *   }
  *   .dev-Highlight {
  *     background: yellow;
  *   }
  * </style>
  */
/**
  * @name Arrange - Full Width
  * @description Arrange render full width by default
  * @section components.arrange.fullWidth
  *
  *
  * @markup
  * <div class="Arrange">
  *     <div class="fixture-Box" style="width: auto;"></div>
  * </div>
  */
/**
  * @name Arrange - Size Fit
  * @description Sizefit/Sizefill shrinkwraps content of .Arrange-sizeFit. Fills the remaining space with content of .Arrange-sizeFill. Each column has equal height.
  * @section components.arrange.sizeFit
  *
  *
  * @markup
  * <div class="Arrange">
  *     <div class="Arrange-sizeFit">
  *         <div class="fixture-Box"></div>
  *     </div>
  *     <div class="Arrange-sizeFill dev-Highlight">Main Content</div>
  * </div>
  */
/**
  * @name Arrange - Ordering
  * @description Arrange can work with Sizefit/Sizefill in either order.
  * @section components.arrange.order
  *
  *
  * @markup
  * <div class="Arrange">
  *   <div class="Arrange-sizeFill">
  *       Arrange-sizeFill
  *   </div>
  *   <div class="Arrange-sizeFit dev-Highlight">
  *       <div class="fixture-Box"></div>
  *   </div>
  * </div>
  */
/**
  * @name Arrange - Multiple Instances
  * @description Arrange allows multiple instances of .Arrange-sizeFit in any order
  * @section components.arrange.multiple
  *
  *
  * @markup
  * <div class="Arrange">
  *     <div class="Arrange-sizeFit dev-highlight">
  *         <div class="fixture-Box"></div>
  *         <small>Copywrite notice</small>
  *         <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
  *     </div>
  *     <div class="Arrange-sizeFill">
  *         <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean id massa dui. In quam sapien, vulputate ut ultrices eu, ultricies non felis. Donec nisi diam, accumsan viverra laoreet sed, ultricies ut lacus. Sed sed iaculis sapien. Phasellus nec massa elit. Nullam rutrum, sapien non semper fermentum, mauris libero eleifend diam, ac rhoncus risus metus sed magna. Duis venenatis, orci at fermentum pulvinar, est diam consequat eros, in tristique neque ligula commodo lorem. Pellentesque eleifend mollis tincidunt. Donec a porta nisl. Phasellus ultrices rutrum odio tincidunt tristique. In hac habitasse platea dictumst. Proin nec massa ultrices est fermentum pretium sed non elit. Aenean nec erat augue.</p>
  *     </div>
  *     <div class="Arrange-sizeFit dev-highlight">
  *         <div class="fixture-Box"></div>
  *     </div>
  * </div>
  * <br>
  * <div class="Arrange">
  *     <div class="Arrange-sizeFit dev-highlight">
  *         <div class="fixture-Box"></div>
  *         <small>Copywrite notice</small>
  *         <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
  *     </div>
  *     <div class="Arrange-sizeFit dev-highlight">
  *         <div class="fixture-Box"></div>
  *     </div>
  *     <div class="Arrange-sizeFill">
  *         <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean id massa dui. In quam sapien, vulputate ut ultrices eu, ultricies non felis. Donec nisi diam, accumsan viverra laoreet sed, ultricies ut lacus. Sed sed iaculis sapien. Phasellus nec massa elit. Nullam rutrum, sapien non semper fermentum, mauris libero eleifend diam, ac rhoncus risus metus sed magna. Duis venenatis, orci at fermentum pulvinar, est diam consequat eros, in tristique neque ligula commodo lorem. Pellentesque eleifend mollis tincidunt. Donec a porta nisl. Phasellus ultrices rutrum odio tincidunt tristique. In hac habitasse platea dictumst. Proin nec massa ultrices est fermentum pretium sed non elit. Aenean nec erat augue.</p>
  *     </div>
  * </div>
  * <br>
  * <div class="Arrange">
  *     <div class="Arrange-sizeFill">
  *         <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean id massa dui. In quam sapien, vulputate ut ultrices eu, ultricies non felis. Donec nisi diam, accumsan viverra laoreet sed, ultricies ut lacus. Sed sed iaculis sapien. Phasellus nec massa elit. Nullam rutrum, sapien non semper fermentum, mauris libero eleifend diam, ac rhoncus risus metus sed magna. Duis venenatis, orci at fermentum pulvinar, est diam consequat eros, in tristique neque ligula commodo lorem. Pellentesque eleifend mollis tincidunt. Donec a porta nisl. Phasellus ultrices rutrum odio tincidunt tristique. In hac habitasse platea dictumst. Proin nec massa ultrices est fermentum pretium sed non elit. Aenean nec erat augue.</p>
  *     </div>
  *     <div class="Arrange-sizeFit dev-highlight">
  *         <div class="fixture-Box"></div>
  *         <small>Copywrite notice</small>
  *         <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
  *     </div>
  *     <div class="Arrange-sizeFit dev-highlight">
  *         <div class="fixture-Box"></div>
  *     </div>
  * </div>
  */
/**
  * @name Arrange - With Gutter
  * @description Supports inter-cell gutters.
  * @section components.arrange.gutter
  *
  *
  * @markup
  *  <div class="Arrange Arrange--withGutter">
  *    <div class="Arrange-sizeFit">
  *        <div class="fixture-Box"></div>
  *    </div>
  *    <div class="Arrange-sizeFill">
  *        <div class="dev-highlight">Main content</div>
  *    </div>
  *  </div>
  */
/**
  * @name Arrange - Middle
  * @description Middle aligns content.
  * @section components.arrange.middle
  *
  *
  * @markup
  * <div class="Arrange Arrange--middle">
  *     <div class="Arrange-sizeFit dev-highlight">
  *         <div class="fixture-Box"></div>
  *     </div>
  *     <div class="Arrange-sizeFill dev-highlight">
  *         <p>Main content.</p>
  *     </div>
  * </div>
  */
/**
  * @name Arrange - Bottom
  * @description Bottom aligns content.
  * @section components.arrange.bottom
  *
  *
  * @markup
  * <div class="Arrange Arrange--bottom">
  *     <div class="Arrange-sizeFit dev-highlight">
  *         <div class="fixture-Box"></div>
  *     </div>
  *     <div class="Arrange-sizeFill dev-highlight">
  *         <p>Main content.</p>
  *     </div>
  * </div>
  */
/**
  * @name Arrange - Equal
  * @description Renders equal width cells
  * @section components.arrange.equal
  *
  *
  * @markup
  * <div class="Arrange Arrange--equal">
  *     <div class="Arrange-sizeFill">
  *         <div class="dev-highlight">A</div>
  *     </div>
  *     <div class="Arrange-sizeFill">
  *         <div class="dev-highlight">B</div>
  *     </div>
  *     <div class="Arrange-sizeFill">
  *         <div class="dev-highlight">C</div>
  *     </div>
  *     <div class="Arrange-sizeFill">
  *         <div class="dev-highlight">D</div>
  *     </div>
  *     <div class="Arrange-sizeFill">
  *         <div class="dev-highlight">E</div>
  *     </div>
  *     <div class="Arrange-sizeFill">
  *         <div class="dev-highlight">F</div>
  *     </div>
  * </div>
  */
/**
  * @name Arrange - Equal with Gutter
  * @description Can arrange equal width cells with a gutter
  * @section components.arrange.equalGutter
  *
  *
  * @markup
  * <div class="Arrange Arrange--equal Arrange--withGutter">
  *     <div class="Arrange-sizeFill">
  *         <div class="dev-highlight">A</div>
  *     </div>
  *     <div class="Arrange-sizeFill">
  *         <div class="dev-highlight">B</div>
  *     </div>
  *     <div class="Arrange-sizeFill">
  *         <div class="dev-highlight">C</div>
  *     </div>
  *     <div class="Arrange-sizeFill">
  *         <div class="dev-highlight">D</div>
  *     </div>
  *     <div class="Arrange-sizeFill">
  *         <div class="dev-highlight">E</div>
  *     </div>
  *     <div class="Arrange-sizeFill">
  *         <div class="dev-highlight">F</div>
  *     </div>
  * </div>
  */
/**
  * @name Arrange - Equal Cells Varying Content
  * @description Renders equal width cells even when content width varies.
  * @section components.arrange.equalVarying
  *
  *
  * @markup
  * <div class="Arrange Arrange--equal">
  *     <div class="Arrange-sizeFill">
  *         <div class="dev-highlight">Orangutan</div>
  *     </div>
  *     <div class="Arrange-sizeFill">
  *         <div class="dev-highlight">Gorilla</div>
  *     </div>
  *     <div class="Arrange-sizeFill">
  *         <div class="dev-highlight">Chimpanzee</div>
  *     </div>
  *     <div class="Arrange-sizeFill">
  *         <div class="dev-highlight">Bonobo</div>
  *     </div>
  *     <div class="Arrange-sizeFill">
  *         <div class="dev-highlight">Gibbon</div>
  *     </div>
  *     <div class="Arrange-sizeFill">
  *         <div class="dev-highlight">Siamang</div>
  *     </div>
  * </div>
  */
/**
  * @name Arrange - Complex Example
  * @description A complex example that shows intermixing images with fit and fill.
  * @section components.arrange.complex
  *
  *
  * @markup
  * <div class="Arrange">
  *     <div class="Arrange-sizeFit dev-highlight">
  *         <img class="u-block" src="http://lorempixel.com/120/120" alt="">
  *     </div>
  *     <div class="Arrange-sizeFill u-textBreak dev-highlight">
  *         <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
  *         <img class="u-sizeFull" src="http://lorempixel.com/700/150" alt="">
  *         <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean id massa dui. In quam sapien, vulputate ut ultrices eu, ultricies non felis. Donec nisi diam, accumsan viverra laoreet sed, ultricies ut lacus. Sed sed iaculis sapien. Phasellus nec massa elit. Nullam rutrum, sapien non semper fermentum, mauris libero eleifend diam, ac rhoncus risus metus sed magna. Duis venenatis, orci at fermentum pulvinar, est diam consequat eros, in tristique neque ligula commodo lorem. Pellentesque eleifend mollis tincidunt. Donec a porta nisl. Phasellus ultrices rutrum odio tincidunt tristique. In hac habitasse platea dictumst. Proin nec massa ultrices est fermentum pretium sed non elit. Aenean nec erat augue.</p>
  *     </div>
  *     <div class="Arrange-sizeFit dev-highlight">
  *         <img class="u-block" src="http://lorempixel.com/80/80" alt="">
  *     </div>
  *     <div class="Arrange-sizeFit dev-highlight">
  *         <img class="u-block" src="http://lorempixel.com/40/40" alt="">
  *     </div>
  * </div>
  */
/*
  * @name Utils-Flexbox
  * @description Utilities for using flexbox. These are single-purpose classes aimed to help module layout concerns. Can also use it as trumps for overwrites. It is not ideal to use this utility set to layout everything in your app. Use hammock-components-flexbox for components and page/app layouts.
  * @section utils.flexbox.index
*/
/*
  * @name Utils-Flexbox - Basic container layout
  * @description Utilities for using flexbox. Sets up the flexbox container and how items inside flow.
  * @section utils.flexbox.container
  *
  * @markup
  * <style>
  * .Test-area {
  *  width: 300px;
  *  border: 1px solid black;
  * }
  * .Test-area-2 {
  *  height: 100px;
  *  border: 1px solid black;
  * }
  * .Test-area > div, .Test-box {
  *  background-color: green;
  *  color: white;
  *  width: 100px;
  *  height: 50px;
  *  margin: .2em;
  * }
  * .Test-inner {
  *  background-color: green;
  *  color: white; 
  *  border: 1px solid cyan;
  *  text-overflow: ellipsis; 
  *  white-space: nowrap;
  * }
  * .Test-overflow, .Test-overflow .Test-inner {
  * overflow:hidden; 
  * }
  * </style>
  *
  * <div>Flex default, flow in a row. Same as using <code>class="u-flexInline</code> which ensures inline-level flex display.</div>
  * <div class="u-flex Test-area">
  *   <div>1</div>
  *   <div>2</div>
  *   <div>3</div>
  *   <div>4</div>
  * </div>
  * 
  * <div>Flex items in a column</div>
  * <div class="u-flex u-flexColumn Test-area">
  *   <div>1</div>
  *   <div>2</div>
  *   <div>3</div>
  *   <div>4</div>
  * </div>
  * 
  * <div>Flex items in a row</div>
  * <div class="u-flex u-flexRow Test-area">
  *   <div>1</div>
  *   <div>2</div>
  *   <div>3</div>
  *   <div>4</div>
  * </div>
  * 
  * <div>Flex items wrap to container width</div>
  * <div class="u-flex u-flexWrap Test-area">
  *   <div>1</div>
  *   <div>2</div>
  *   <div>3</div>
  *   <div>4</div>
  * </div>
  */
.u-flex {
  display: -webkit-box !important;
  display: -webkit-flex !important;
  display: -ms-flexbox !important;
  display: flex !important; }

.u-flexInline {
  display: -webkit-inline-box !important;
  display: -webkit-inline-flex !important;
  display: -ms-inline-flexbox !important;
  display: inline-flex !important; }

.u-flexColumn {
  -webkit-flex-direction: column !important;
  -ms-flex-direction: column !important;
  flex-direction: column !important;
  -webkit-box-orient: vertical !important;
  -webkit-box-direction: normal !important; }

.u-flexRow {
  -webkit-flex-direction: row !important;
  -ms-flex-direction: row !important;
  flex-direction: row !important;
  -webkit-box-orient: horizontal !important;
  -webkit-box-direction: normal !important; }

.u-flexWrap {
  -webkit-flex-wrap: wrap !important;
  -ms-flex-wrap: wrap !important;
  flex-wrap: wrap !important; }

/**
  * @name Utils-Flexbox - Reverse direction in container
  * @description Flow items in the reversed order on x- or y-axis
  * @section utils.flexbox.containerReverse
  *
  * @markup
  *
  * <div>Flex items in a column in reversed order</div>
  * <div class="u-flex u-flexColumnReverse Test-area">
  *   <div>1</div>
  *   <div>2</div>
  *   <div>3</div>
  *   <div>4</div>
  * </div>
  * 
  * <div>Flex items in a row in reversed order</div>
  * <div class="u-flex u-flexRowReverse Test-area">
  *   <div>1</div>
  *   <div>2</div>
  *   <div>3</div>
  *   <div>4</div>
  * </div>
  *
  * <div>Flex items in reversed order and wrap to container width</div>
  * <div class="u-flex u-flexWrapReverse Test-area">
  *   <div>1</div>
  *   <div>2</div>
  *   <div>3</div>
  *   <div>4</div>
  * </div>
  */
.u-flexColumnReverse {
  -webkit-flex-direction: column-reverse !important;
  -ms-flex-direction: column-reverse !important;
  flex-direction: column-reverse !important;
  -webkit-box-orient: vertical !important;
  -webkit-box-direction: reverse !important; }

.u-flexRowReverse {
  -webkit-flex-direction: row-reverse !important;
  -ms-flex-direction: row-reverse !important;
  flex-direction: row-reverse !important;
  -webkit-box-orient: horizontal !important;
  -webkit-box-direction: reverse !important; }

.u-flexWrapReverse {
  -webkit-flex-wrap: wrap-reverse !important;
  -ms-flex-wrap: wrap-reverse !important;
  flex-wrap: wrap-reverse !important; }

/**
  * @name Utils-Flexbox - Justify/Space items along the main X-axis
  * @description Control spacing of items on the X-axis
  * @section utils.flexbox.contentJustify
  *
  * @markup
  *
  * <div>Space items evenly or justified on x-axis</div>
  * <div class="u-flex u-flexSpaced" style="border:1px solid black">
  *   <div class="Test-box">1</div>
  *   <div class="Test-box">2</div>
  *   <div class="Test-box">3</div>
  * </div>
  *
  * <div>Space items evenly but with equal space around it</div>
  * <div class="u-flex u-flexSpacedAround" style="border:1px solid black">
  *   <div class="Test-box">1</div>
  *   <div class="Test-box">2</div>
  *   <div class="Test-box">3</div>
  * </div>
  *
  * <div>Center items on the x-axis</div>
  * <div class="u-flex u-flexCentered" style="border:1px solid black">
  *   <div class="Test-box">1</div>
  *   <div class="Test-box">2</div>
  *   <div class="Test-box">3</div>
  * </div>
  *
  * <div>Item flow begins at the start of x-axis. This is the default behavior for flex container items.</div>
  * <div class="u-flex u-flexStart" style="border:1px solid black">
  *   <div class="Test-box">1</div>
  *   <div class="Test-box">2</div>
  *   <div class="Test-box">3</div>
  * </div>
  *
  * <div>Item flow begins at the end of x-axis.</div>
  * <div class="u-flex u-flexEnd" style="border:1px solid black">
  *   <div class="Test-box">1</div>
  *   <div class="Test-box">2</div>
  *   <div class="Test-box">3</div>
  * </div>
  */
.u-flexSpaced {
  -ms-flex-pack: justify !important;
  -webkit-box-pack: justify !important;
  -webkit-justify-content: space-between !important;
  justify-content: space-between !important; }

.u-flexSpacedAround {
  -ms-flex-pack: distribute !important;
  -webkit-justify-content: space-around !important;
  justify-content: space-around !important; }

.u-flexCentered {
  -ms-flex-pack: center !important;
  -webkit-box-pack: center !important;
  -webkit-justify-content: center !important;
  justify-content: center !important; }

.u-flexStart {
  -ms-flex-pack: start !important;
  -webkit-box-pack: start !important;
  -webkit-justify-content: flex-start !important;
  justify-content: flex-start !important; }

.u-flexEnd {
  -ms-flex-pack: end !important;
  -webkit-box-pack: end !important;
  -webkit-justify-content: flex-end !important;
  justify-content: flex-end !important; }

/**
  * @name Utils-Flexbox - Align items along the cross Y-axis
  * @description Control spacing and positioining of items on the Y-axis
  * @section utils.flexbox.contentAlign
  *
  * @markup
  * 
  * <div>Items are stretched to fill the container across the Y-axis. This is default flexbox behavior, repects height value.</div>
  * <div class="u-flex u-flexStretch Test-area-2">
  *   <div style="background: green; width: 50px">1</div>
  *   <div style="background: green;  width: 50px">2</div>
  *   <div style="background: green; width: 50px;">3</div>
  * </div>
  * 
  * <div>Align items in the middle of the y-axis</div>
  * <div class="u-flex u-flexMiddle Test-area-2">
  *   <div class="Test-box" style="height: 80px">1</div>
  *   <div class="Test-box" style="height: 30px">2</div>
  *   <div class="Test-box">3</div>
  * </div>
  *
  * <div>Items are aligned along their baselines</div>
  * <div class="u-flex u-flexBaseline Test-area-2">
  *   <div class="Test-box" style="height: 80px; padding: 1em">1</div>
  *   <div class="Test-box" style="height: 30px">2</div>
  *   <div class="Test-box">3</div>
  * </div>
  *
  * <div>Item flow begins at the start/top of y-axis.</div>
  * <div class="u-flex u-flexTop Test-area-2">
  *   <div class="Test-box" style="height: 80px; padding: 1em">1</div>
  *   <div class="Test-box" style="height: 30px">2</div>
  *   <div class="Test-box">3</div>
  * </div>
  *
  * <div>Item flow begins at the end (bottom) of y-axis.</div>
  * <div class="u-flex u-flexBottom Test-area-2">
  *   <div class="Test-box" style="height: 80px">1</div>
  *   <div class="Test-box" style="height: 30px">2</div>
  *   <div class="Test-box">3</div>
  * </div>
  * 
  *
  */
.u-flexMiddle {
  -ms-flex-align: center !important;
  -webkit-box-align: center !important;
  -webkit-align-items: center !important;
  align-items: center !important; }

.u-flexBaseline {
  -ms-flex-align: baseline !important;
  -webkit-box-align: baseline !important;
  -webkit-align-items: baseline !important;
  align-items: baseline !important; }

.u-flexStretch {
  -ms-flex-align: stretch !important;
  -webkit-box-align: stretch !important;
  -webkit-align-items: stretch !important;
  align-items: stretch !important; }

.u-flexTop {
  -ms-flex-align: start !important;
  -webkit-box-align: start !important;
  -webkit-align-items: flex-start !important;
  align-items: flex-start !important; }

.u-flexBottom {
  -ms-flex-align: end !important;
  -webkit-box-align: end !important;
  -webkit-align-items: flex-end !important;
  align-items: flex-end !important; }

/**
  * @name Utils-Flexbox - Grow, Srhink
  * @description Grow or shrink
  * @section utils.flexbox.itemGrowShrink
  *
  * @markup
  * 
  * <div>Grow items to fit the container in height and width</div>
  * <div class="u-flex" style="height:50px; width:500px">
  *   <span class="u-flexItemGrow Test-inner" style="width: 100px">1</span>
  *   <span class="u-flexItemGrow Test-inner" style="width: 100px">2</span>
  * </div>
  *
  * <div>Shrink items to fit the container in height and width</div>
  * <div class="u-flex" style="height:50px; width:500px">
  *   <span class="u-flexItemShrink Test-inner" style="width: 800px">1</span>
  *   <span class="u-flexItemShrink Test-inner" style="width: 800px">2</span>
  * </div>
  * 
  */
.u-flexItemGrow {
  min-width: 0;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1; }

.u-flexItemShrink {
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1; }

/**
  * @name Utils-Flexbox - Grow, Srhink
  * @description Test bug fix to address overflow flexbox items in chrome browser;
  * @section utils.flexbox.itemGrowShrink
  *
  * @markup
  * 
  * <div class="u-flex Test-overflow" style="height:20px; width:200px">
  *   <span class="u-flexItemGrow Test-inner">1 let's add some texts to test test this issue</span>
  *   <span class="Test-inner">2 Test box</span>
  * </div>
  *
  * <div class="u-flex u-flexColumn Test-overflow" style="height:50px; width:50px">
  *   <span class="u-flexItemGrow Test-inner">1 let's add some texts to test test this issue</span>
  *   <span class="Test-inner">2 Test box</span>
  * </div>
  */
.u-flexColumn .u-flexItemGrow,
.u-flexColumnReverse .u-flexItemGrow {
  min-width: auto;
  min-height: 0; }

/**
  * @name Utils-Flexbox - Keep width and height
  * @description preserve the width and height of the element itself, no grow or shrink
  * @section utils.flexbox.itemheightpreservation
  *
  * @markup
  *
  * <div>Not shrinking width of item</div>
  * <div class="u-flex" style="height:50px; width:500px">
  *   <span class="u-flexItemNoShrink Test-inner" style="width: 800px;">1</span>
  * </div>
  * 
  * <div>maintain height of the element to the container in height and width</div>
  * <div class="u-flex" style="height:60px; width:500px;">
  *   <span class="u-flexKeepHeight Test-inner">1</span>
  * </div>
  */
.u-flexItemNoShrink {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0; }

.u-flexKeepHeight {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 0;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1; }

/**
  * @name Utils-Flexbox - Self Alignment
  * @description Specify individual item's alignment overriding one defined on the container. Float, clear and vertical-align are ignored on flex items.
  * @section utils.flexbox.itemSelfAlignment
  *
  * @markup
  * 
  * <div class="u-flex Test-area-2">
  *   <div class="Test-box u-flexItemBaseline" style="height: 80px">1 Middle</div>
  *   <div class="Test-box u-flexItemMiddle" style="height: 30px">2 Baseline</div>
  *   <div class="Test-box u-flexItemBottom">3 Bottom</div>
  *   <div class="Test-box u-flexItemTop">4 Top</div>
  * </div>
  *
  * <div class="u-flex Test-area-2">
  *   <div class="u-flexItemStretch Test-box">1</div>
  *   <div class="u-flexItemStretch Test-box">2</div>
  *   <div class="u-flexItemStretch Test-box">3</div>
  *   <div class="u-flexItemStretch Test-box">4</div>
  * </div>
  *
  */
.u-flexItemMiddle {
  -webkit-align-self: center !important;
  -ms-flex-item-align: center !important;
  align-self: center !important; }

.u-flexItemBaseline {
  -ms-flex-align: baseline !important;
  -webkit-box-align: baseline !important;
  -webkit-align-items: baseline !important;
  align-items: baseline !important; }

.u-flexItemStretch {
  -webkit-align-self: stretch !important;
  -ms-flex-item-align: stretch !important;
  align-self: stretch !important; }

.u-flexItemTop {
  -webkit-align-self: flex-start !important;
  -ms-flex-item-align: start !important;
  align-self: flex-start !important; }

.u-flexItemBottom {
  -webkit-align-self: flex-end !important;
  -ms-flex-item-align: end !important;
  align-self: flex-end !important; }

/**
  * @name Utils-Flexbox - Item Order
  * @description Force move an item to be the first or last in a container
  * @section utils.flexbox.itemOrder
  *
  * @markup
  * 
  * <div class="u-flex Test-area-2">
  *   <div class="Test-box">1</div>
  *   <div class="Test-box">2</div>
  *   <div class="Test-box u-flexItemFirst">3 (force to first)</div>
  *   <div class="Test-box">4</div>
  * </div>
  *
  * <div class="u-flex Test-area-2">
  *   <div class="Test-box">1</div>
  *   <div class="Test-box u-flexItemLast">2 (force to last)</div>
  *   <div class="Test-box">3</div>
  *   <div class="Test-box">4</div>
  * </div>
  */
.u-flexItemFirst {
  -ms-flex-order: -1 !important;
  -webkit-box-ordinal-group: 0 !important;
  -webkit-order: -1 !important;
  order: -1 !important; }

.u-flexItemLast {
  -ms-flex-order: 99999 !important;
  -webkit-box-ordinal-group: 100000 !important;
  -webkit-order: 99999 !important;
  order: 99999 !important; }

/**
  * @name Utils-Flexbox - Item Porportional Sizing
  * @description Relative sizing of items in container
  * @section utils.flexbox.itemSizing
  *
  * @markup
  * 
  * <div class="u-flex Test-area-2">
  *   <div class="Test-inner u-flexItemSized">1</div>
  *   <div class="Test-inner u-flexItemSized+">2</div>
  *   <div class="Test-inner u-flexItemSized++">3</div>
  * </div>
  *
  * <div class="u-flex Test-area-2">
  *   <div class="Test-box u-flexItemSized">1</div>
  *   <div class="Test-box u-flexItemSized+">2</div>
  *   <div class="Test-box u-flexItemSized++">3</div>
  *   <div class="Test-box u-flexItemSized">4</div>
  *   <div class="Test-box u-flexItemSized++">5</div>
  * </div>
  */
.u-flexItemSized {
  -webkit-box-flex: 100 !important;
  -webkit-flex: 100 !important;
  -ms-flex: 100 !important;
  flex: 100 !important; }

.u-flexItemSized\+ {
  -webkit-box-flex: 200 !important;
  -webkit-flex: 200 !important;
  -ms-flex: 200 !important;
  flex: 200 !important; }

.u-flexItemSized\+\+ {
  -webkit-box-flex: 300 !important;
  -webkit-flex: 300 !important;
  -ms-flex: 300 !important;
  flex: 300 !important; }

.monty-hall .door {
  height: 250px;
  width: 150px;
  background-color: #00aced;
  font-weight: bold;
  font-size: 60px;
  cursor: pointer; }
  .monty-hall .door.selected {
    box-shadow: orange 0 0 11px 5px; }
  .monty-hall .door.open {
    background: url("images/montyHall/donkey.png") no-repeat center/cover; }
    .monty-hall .door.open.winner {
      background: url("images/montyHall/money.jpg") no-repeat center/cover; }
